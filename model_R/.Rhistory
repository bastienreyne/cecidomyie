axis.text.x = element_text(size = 12)) +
scale_x_discrete(labels = c(expression(gamma), expression(p[m]),
expression(mu[ER]), expression(mu[EH]),
expression(k), "stock", expression(E[0] mu[l])))
to_plot %>% ggplot +
aes(x = Paramètre, y = Valeur, fill = Indice) +
geom_bar(stat = "identity", position = "dodge") +
facet_grid(. ~ Sol) +
theme_bw() +
theme(legend.title = element_blank(),
legend.position = "bottom",
axis.text.x = element_text(size = 12)) +
scale_x_discrete(labels = c(expression(gamma), expression(p[m]),
expression(mu[ER]), expression(mu[EH]),
expression(k), "stock", expression(E[0]*mu[l])))
S_ER1
S_ER7
source('~/cecidomyie/model_R/sensitivity_analysis_A.R')
to_plot %>% ggplot +
aes(x = Paramètre, y = Valeur, fill = Indice) +
geom_bar(stat = "identity", position = "dodge") +
facet_grid(. ~ Sol) +
theme_bw() +
theme(legend.title = element_blank(),
legend.position = "bottom",
axis.text.x = element_text(size = 12)) +
scale_x_discrete(labels = c(expression(gamma), expression(p[m]),
expression(mu[ER]), expression(mu[EH]),
expression(k), "stock", expression(E[0]*mu[l])))
save(to_plot, file = "sobol2.Rdata")
rm(list =ls())
library(tidyverse)
source("/home/bastien/cecidomyie/model_R/model_A.R")
source("/home/bastien/cecidomyie/model_R/objectif_A.R")
load("/home/bastien/cecidomyie/model_R/sobol.Rdata")
to_plot %>% ggplot +
aes(x = Paramètre, y = Valeur, fill = Indice) +
geom_bar(stat = "identity", position = "dodge") +
facet_grid(. ~ Sol) +
theme_bw() +
theme(legend.title = element_blank(),
legend.position = "bottom",
axis.text.x = element_text(size = 12)) +
scale_x_discrete(labels = c(expression(gamma), expression(p[m]),
expression(mu[ER]), expression(mu[EH]),
expression(k), "stock", expression(E[0]*mu[l])))
load("/home/bastien/cecidomyie/model_R/sobol2.Rdata")
to_plot %>% ggplot +
aes(x = Paramètre, y = Valeur, fill = Indice) +
geom_bar(stat = "identity", position = "dodge") +
facet_grid(. ~ Sol) +
theme_bw() +
theme(legend.title = element_blank(),
legend.position = "bottom",
axis.text.x = element_text(size = 12)) +
scale_x_discrete(labels = c(expression(gamma), expression(p[m]),
expression(mu[ER]), expression(mu[EH]),
expression(k), "stock", expression(E[0]*mu[l])))
load("/home/bastien/cecidomyie/model_R/calibration_A.Rdata")
pareto_front_A[, 7]
pareto_front_A
params_front_A[, 7]
params_front_A[, 7] %>% summary()
params_front_A[, 1] %>% summary()
params_front_A[, 1] %>% summary() %>% round(3)
load("calibration_A2.Rdata")
params_front_A %>% dim
params_front_A[, 1]
params_front_A[, 1] %>% summary() %>% round(3)
params_front_A[, 5] %>% summary() %>% round(3)
rm(list =ls())
to_plot %>% ggplot +
aes(x = Paramètre, y = Valeur, fill = Indice) +
geom_bar(stat = "identity", position = "dodge") +
facet_grid(. ~ Sol) +
theme_bw() +
theme(legend.title = element_blank(),
legend.position = "bottom",
axis.text.x = element_text(size = 12)) +
scale_x_discrete(labels = c(expression(gamma), expression(p[m]),
expression(mu[ER]), expression(mu[EH]),
expression(k), "stock", expression(E[0]*mu[l])))
load("/home/bastien/cecidomyie/model_R/sobol3.Rdata")
to_plot %>% ggplot +
aes(x = Paramètre, y = Valeur, fill = Indice) +
geom_bar(stat = "identity", position = "dodge") +
facet_grid(. ~ Sol) +
theme_bw() +
theme(legend.title = element_blank(),
legend.position = "bottom",
axis.text.x = element_text(size = 12)) +
scale_x_discrete(labels = c(expression(gamma), expression(p[m]),
expression(mu[ER]), expression(mu[EH]),
expression(k), "stock", expression(E[0]*mu[l])))
load("/home/bastien/cecidomyie/model_R/sobol2.Rdata")
to_plot %>% ggplot +
aes(x = Paramètre, y = Valeur, fill = Indice) +
geom_bar(stat = "identity", position = "dodge") +
facet_grid(. ~ Sol) +
theme_bw() +
theme(legend.title = element_blank(),
legend.position = "bottom",
axis.text.x = element_text(size = 12)) +
scale_x_discrete(labels = c(expression(gamma), expression(p[m]),
expression(mu[ER]), expression(mu[EH]),
expression(k), "stock", expression(E[0]*mu[l])))
ggsave("sensitivity_analysis_A.Rdata", width = 10, height = 5)
ggsave("sensitivity_analysis_A.eps", width = 10, height = 5)
source('~/cecidomyie/model_R/sensitivity_analysis_A.R')
rm(list =ls())
load("/home/bastien/cecidomyie/model_R/sobol4.Rdata")
to_plot %>% ggplot +
aes(x = Paramètre, y = Valeur, fill = Indice) +
geom_bar(stat = "identity", position = "dodge") +
facet_grid(. ~ Sol) +
theme_bw() +
theme(legend.title = element_blank(),
legend.position = "bottom",
axis.text.x = element_text(size = 12)) +
scale_x_discrete(labels = c(expression(gamma), expression(p[m]),
expression(mu[ER]), expression(mu[EH]),
expression(k), "stock", expression(E[0]*mu[l])))
source('~/cecidomyie/model_R/objectif.R')
rm(list =ls())
library(tidyverse)
library(corrplot)
source("model_new.R")
source("objectif_A.R")
source("objectif.R")
source("plot_res.R")
load("/home/bastien/cecidomyie/model_R/calibration_A3.Rdata")
load("/home/bastien/cecidomyie/model_R/calibration_A2.Rdata")
X <- scale(params_front_A)
Y <- scale(pareto_front_A)
matcor <- cor(cbind(X, Y), method = "spearman")
rownames(matcor) <- c(":gamma", ":p[m]", ":mu[ER]", ":mu[EH]",
":k", "stock", ":E[0] * mu[l]", "ER", "PS", "EH")
colnames(matcor) <- c(":gamma", ":p[m]", ":mu[ER]", ":mu[EH]",
":k", "stock", ":E[0] * mu[l]", "ER", "PS", "EH")
corrplot.mixed(matcor, tl.pos = "lt", mar = c(0, 0, 0.2, 0))
?hclhclust
?hclust
## On effectue une CAH
hca <- hclust(dist(X), method = "ward.D2")
plot(hca)
load("/home/bastien/cecidomyie/model_R/calibration_A3.Rdata")
rm(list =ls())
source('~/cecidomyie/model_R/exploration_A.R')
## On effectue une CAH
hca <- hclust(dist(X), method = "ward.D2")
plot(hca)
## On effectue une CAH
hca <- hclust(dist(X), method = "ward.D2")
hca$height
hca$height %>% plot
hca$order
hca$labels
hca$call
hca$height
inertie <- sort(hca$height, decreasing = TRUE)
plot(inertie[1:20], type = "s", xlab = "Nombre de classes", ylab = "Inertie")
plot(inertie[1:25], type = "s", xlab = "Nombre de classes", ylab = "Inertie")
inertie
var(X)
dim(X)
842
norm(X[1, ], "2")
?norm
X[1, 1]^2 + X[1, 2]^2 + X[1, 3]^2 + X[1, 4]^2 + X[1, 5]^2 + X[1, 6]^2 + X[1, 7]^2
sqrt(X[1, 1]^2 + X[1, 2]^2 + X[1, 3]^2 + X[1, 4]^2 + X[1, 5]^2 + X[1, 6]^2 + X[1, 7]^2)
norm(X[1, ], "2")^2
norm(X[1, ], "2")^2
n <- 842
r <- 0
for(i in 1:n) {r <- r + (1/n)*norm(X[i, ], "2")^2}
r
?hca
?hclust
agnes
inertie_totale <- function(x) {
n <- nrow(x)
res <- 0
for (i in 1:n) {
res <- res + norm(x[i, ], "2")^2
}
res / n
}
inertie_totale(X)
inertie_interne <- inertie_totale(X) - cumsum(hca$height)
inertie_interne
inertie_interne %>% plot()
inertie_interne[1:20] %>% plot()
inertie_interne[1:30] %>% plot()
sum(hca$height)
inertie_totale(X)
hce$height %>% round(3)
hca$height %>% round(3)
hca$height %>% rev %>% plot()
hca$height[1:25] %>% rev %>% plot()
hca$height[1:30] %>% rev %>% plot()
hca$height[1:80] %>% rev %>% plot()
hca$height[1:100] %>% rev %>% plot()
hca$height[1:150] %>% rev %>% plot()
hca$height %>% rev %>% plot()
hca$height[200] %>% rev %>% plot()
hca$height[1:200] %>% rev %>% plot()
hca$height[1:50] %>% rev %>% plot()
hca$height[700:841] %>% rev %>% plot()
hca$height[800:841] %>% rev %>% plot()
hca$height[800:841] %>% rev %>% plot(type ="step")
inertie_totale(X)
inertie_totale(X)
sum(hca$height)
sum(hca$height^2) / 842
sum(hca$height) / 842
sum(hca$height)
inertie_totale(X)
inertie_totale <- function(x) {
n <- nrow(x)
res <- 0
for (i in 1:n) {
res <- res + norm(x[i, ], "2")
}
res / n
}
inertie_totale(X)
res <- res + norm(x[i, ], "2")^2
inertie_totale <- function(x) {
n <- nrow(x)
res <- 0
for (i in 1:n) {
res <- res + norm(x[i, ], "2")^2
}
res / n
}
inertie_totale(X)
inertie_totale(X) * 842
hca$height %>% rev[1:50] %>% plot(type ="step")
hca$height %>% rev()[1:50] %>% plot(type ="step")
hca$height %>% rev()[1:50]
hca$height %>% rev()
toto <- hca$height %>% rev()
toto <- plot(type = "s")
toto
toto <- hca$height %>% rev()
plot(toto, type = "s")
plot(toto[1:50], type = "s")
plot(toto[1:30], type = "s")
plot(toto[100:30], type = "s")
plot(toto[10:30], type = "s")
colMeans(X)
inertie_interne <- sum(hca$height) - cumsum(hca$height)
inertie_interne
inertie_interne <- sum(hca$height) - cumsum(hca$height)
inertie_interne[1:50] %>% plot(type ="s")
sum(hca$height)
inertie_totale(X)
inertie_totale(scale(params))
inertie_totale(scale(params_A))
inertie_totale(scale(pareto_A))
inertie_totale(scale(pareto_front_A))
?hca
hclust
hca2 <- hclust(dist(X), method = "ward.D")
sum(hca2$height)
inertie_totale(rnorm(12000))
rnorm(1000)
inertie_totale(matrix(rnorm(12000), ncol = 12))
inertie_totale(matrix(rnorm(12000), ncol = 12))
inertie_totale(matrix(rnorm(12000), ncol = 12))
inertie_totale(matrix(rnorm(12000), ncol = 12))
inertie_totale(matrix(rnorm(12000), ncol = 12))
inertie_totale(matrix(rpois(12000), ncol = 12))
inertie_totale(matrix(rpois(12000, 2), ncol = 12))
inertie_totale(scale(matrix(rpois(12000, 2), ncol = 12)))
inertie_totale(scale(matrix(rpois(12000, 2), ncol = 12)))
inertie_totale(scale(matrix(rpois(12000, 2), ncol = 12)))
inertie_totale(scale(matrix(rpois(12000, 2), ncol = 12)))
inertie_totale(scale(matrix(runif(12000), ncol = 12)))
inertie_totale(scale(matrix(runif(12000), ncol = 12)))
inertie_totale(scale(matrix(runif(12000), ncol = 12)))
inertie_totale(scale(matrix(runif(12000), ncol = 12)))
sum(hca$height)
hca$height %>% summary()
library(cluster)
toto <- agnes(dist(X), method = "ward")
toto
toto$height
toto$height %>% sum()
inertie_totale(params_front_A)
?agnes
plot(toto)
plot(hca)
agnes$height
agnes$height
toto$ac
toto$diss
toto$merge
toto
toto$height
hca$height %>% summary()
## On effectue une CAH
hca <- hclust(dist(X), method = "average")
hca$height %>% summary()
## On effectue une CAH
hca <- hclust(dist(X), method = "complete")
hca$height %>% summary()
## On effectue une CAH
hca <- hclust(dist(X), method = "ward.D1")
## On effectue une CAH
hca <- hclust(dist(X), method = "ward.D")
hca$height %>% summary()
## On effectue une CAH
hca <- hclust(dist(X), method = "ward.D2")
hca$height %>% summary()
load("/home/bastien/cecidomyie/model_R/sobo_A.Rdata")
load("/home/bastien/cecidomyie/model_R/sobol_A.Rdata")
to_plot %>% ggplot +
aes(x = Paramètre, y = Valeur, fill = Indice) +
geom_bar(stat = "identity", position = "dodge") +
facet_grid(. ~ Sol) +
theme_bw() +
theme(legend.title = element_blank(),
legend.position = "bottom",
axis.text.x = element_text(size = 12)) +
scale_x_discrete(labels = c(expression(gamma), expression(p[m]),
expression(mu[ER]), expression(mu[EH]),
expression(k), "stock", expression(E[0]*mu[l])))
library(FactoMineR)
HPHC(X)
HCPC(X)
toto <- HCPC(X)
toto
inertie_interne <- sum(hca$height) - cumsum(hca$height)
inertie_interne
## On effectue une CAH
hca <- hclust(dist(X), method = "ward.D2")
inertie <- rev(hca$height)
plot(inertie[1:20], type = "s", xlab = "Nombre de classes", ylab = "Inertie")
data.frame(inertie, nb_class = 1:841)
## On effectue une CAH
hca <- hclust(dist(X), method = "ward.D2")
inertie <- data.frame(height = rev(hca$height), nb_class = 1:841)
ggplot(inertie) +
aes(y = height, x = nb_class) +
geom_step()
ggplot(inertie) +
aes(y = height[1:30], x = nb_class[1:30]) +
geom_step()
ggplot(inertie[1:30, ]) +
aes(y = height, x = nb_class) +
geom_step()
ggplot(inertie[1:30, ]) +
aes(y = height, x = nb_class) +
geom_step() +
theme_bw()
ggplot(inertie[1:30, ]) +
aes(y = height, x = nb_class) +
geom_step() +
theme_bw() +
ylab("Inertie interne") +
xlab("Nombre de classes")
ggplot(inertie[1:25, ]) +
aes(y = height, x = nb_class) +
geom_step() +
theme_bw() +
ylab("Inertie interne") +
xlab("Nombre de classes")
ggsave("cah_A.eps", width = 10, height = 6)
ggplot(inertie[1:25, ]) +
aes(y = height, x = nb_class) +
geom_step(lwd = 0.75) +
theme_bw() +
ylab("Inertie interne") +
xlab("Nombre de classes")
ggsave("cah_A.eps", width = 10, height = 6)
inertie <- data.frame(height = cumsum(rev(hca$height)), nb_class = 1:841)
ggplot(inertie[1:25, ]) +
aes(y = height, x = nb_class) +
geom_step(lwd = 0.75) +
theme_bw() +
ylab("Inertie interne") +
xlab("Nombre de classes")
inertie <- data.frame(height = rev(hca$height), nb_class = 1:841)
ggplot(inertie[1:25, ]) +
aes(y = height, x = nb_class) +
geom_step(lwd = 0.75) +
theme_bw() +
ylab("Inertie interne") +
xlab("Nombre de classes")
citation("mco")
citation("emoa")
cutree(hca, 16)
classes <- cutree(hca, 16)
corrplot.mixed(matcor, tl.pos = "lt", mar = c(0, 0, 0.2, 0))
source("plot_res.R")
xhich(classes == 1)
which(classes == 1)
which(classes == 1)[1]
plot_decompo_A(X[which(classes == classe)[1], ], inflos_obs)
classe <- 1
plot_decompo_A(X[which(classes == classe)[1], ], inflos_obs)
classe <- 2
plot_decompo_A(X[which(classes == classe)[1], ], inflos_obs)
classe <- 3
plot_decompo_A(X[which(classes == classe)[1], ], inflos_obs)
X[which(classes == classe)[1], ]
classe <- 1
plot_decompo_A(params_front_A[which(classes == classe)[1], ], inflos_obs)
classe <- 2
plot_decompo_A(params_front_A[which(classes == classe)[1], ], inflos_obs)
classe <- 3
plot_decompo_A(params_front_A[which(classes == classe)[1], ], inflos_obs)
classe <- 4
plot_decompo_A(params_front_A[which(classes == classe)[1], ], inflos_obs)
classe <- 5
plot_decompo_A(params_front_A[which(classes == classe)[1], ], inflos_obs)
classe <- 6
plot_decompo_A(params_front_A[which(classes == classe)[1], ], inflos_obs)
classe <- 7
plot_decompo_A(params_front_A[which(classes == classe)[1], ], inflos_obs)
classe <- 8
plot_decompo_A(params_front_A[which(classes == classe)[1], ], inflos_obs)
classe <- 9
plot_decompo_A(params_front_A[which(classes == classe)[1], ], inflos_obs)
classe <- 10
plot_decompo_A(params_front_A[which(classes == classe)[1], ], inflos_obs)
classe <- 11
plot_decompo_A(params_front_A[which(classes == classe)[1], ], inflos_obs)
classe <- 12
plot_decompo_A(params_front_A[which(classes == classe)[1], ], inflos_obs)
classe <- 13
plot_decompo_A(params_front_A[which(classes == classe)[1], ], inflos_obs)
classe <- 14
plot_decompo_A(params_front_A[which(classes == classe)[1], ], inflos_obs)
classe <- 15
plot_decompo_A(params_front_A[which(classes == classe)[1], ], inflos_obs)
classe <- 16
plot_decompo_A(params_front_A[which(classes == classe)[1], ], inflos_obs)
classe <- 7
classes == 7
classes == 7 %>% sum
(classes == 7) %>% sum
plot_decompo_A(params_front_A[which(classes == classe)[2], ], inflos_obs)
plot_decompo_A(params_front_A[which(classes == classe)[8], ], inflos_obs)
plot_decompo_A(params_front_A[which(classes == classe)[3], ], inflos_obs)
plot_decompo_A(params_front_A[which(classes == classe)[4], ], inflos_obs)
plot_decompo_A(params_front_A[which(classes == classe)[5], ], inflos_obs)
plot_decompo_A(params_front_A[which(classes == classe)[6], ], inflos_obs)
plot_decompo_A(params_front_A[which(classes == classe)[7], ], inflos_obs)
plot_decompo_A(params_front_A[which(classes == classe)[9], ], inflos_obs)
plot_decompo_A(params_front_A[which(classes == classe)[10], ], inflos_obs)
plot_decompo_A(params_front_A[which(classes == classe)[11], ], inflos_obs)
plot_decompo_A(params_front_A[which(classes == classe)[12], ], inflos_obs)
plot_decompo_A(params_front_A[which(classes == classe)[13], ], inflos_obs)
plot_decompo_A(params_front_A[which(classes == classe)[14], ], inflos_obs)
plot_decompo_A(params_front_A[which(classes == classe)[15], ], inflos_obs)
plot_decompo_A(params_front_A[which(classes == classe)[16], ], inflos_obs)
plot_decompo_A(params_front_A[which(classes == classe)[17], ], inflos_obs)
plot_decompo_A(params_front_A[which(classes == classe)[126], ], inflos_obs)
plot_decompo_A(params_front_A[which(classes == classe)[26], ], inflos_obs)
(classes == 8) %>% sum
classe <- 8
plot_decompo_A(params_front_A[which(classes == classe)[2], ], inflos_obs)
plot_decompo_A(params_front_A[which(classes == classe)[3], ], inflos_obs)
plot_decompo_A(params_front_A[which(classes == classe)[4], ], inflos_obs)
plot_decompo_A(params_front_A[which(classes == classe)[5], ], inflos_obs)
plot_decompo_A(params_front_A[which(classes == classe)[6], ], inflos_obs)
classe <- 7
plot_decompo_A(params_front_A[which(classes == classe)[1], ], inflos_obs)
params_front_A[,1] %>% which.max
plot_decompo_A(params_front_A[484, ], inflos_obs)
which(params_front_A[,1] > quantile(params_front_A[, 1], 0.8)
)
plot_decompo_A(params_front_A[1, ], inflos_obs)
plot_decompo_A(params_front_A[7, ], inflos_obs)
plot_decompo_A(params_front_A[8, ], inflos_obs)
plot_decompo_A(params_front_A[9, ], inflos_obs)
plot_decompo_A(params_front_A[11, ], inflos_obs)
params_front_A[11, ]
quantile(params_front_A[, 1], 0.8)
quantile(params_front_A[, 1], 0.9)
quantile(params_front_A[, 1], 0.99)
which(params_front_A[,1] > quantile(params_front_A[, 1], 0.99))
quantile(params_front_A[, 487], 0.9)
quantile(params_front_A[487,], 0.9)
plot_decompo_A(params_front_A[487, ], inflos_obs)
plot_decompo_A(params_front_A[493, ], inflos_obs)
plot_decompo_A(params_front_A[500, ], inflos_obs)
plot_decompo_A(params_front_A[643, ], inflos_obs)
plot_decompo_A(params_front_A[646, ], inflos_obs)
plot_decompo_A(params_front_A[650, ], inflos_obs)
plot_decompo_A(params_front_A[759, ], inflos_obs)
plot_decompo_A(params_front_A[765, ], inflos_obs)
classe <- 7
plot_decompo_A(params_front_A[which(classes == classe)[1], ], inflos_obs)
classe <- 8
plot_decompo_A(params_front_A[which(classes == classe)[1], ], inflos_obs)
plot_decompo_A(c(0.1, params_front_A[which(classes == classe)[1]), 2:7], inflos_obs)
plot_decompo_A(c(0.1, params_front_A[which(classes == classe)[1], 2:7]), inflos_obs)
plot_decompo_A(c(0.08, params_front_A[which(classes == classe)[1], 2:7]), inflos_obs)
ggsave("A1.eps", device = cairo_ps, width = 10, height = 5)
c(0.08, params_front_A[which(classes == classe)[1], 2:7]) %>% round(3)
classe <- 1
plot_decompo_A(params_front_A[which(classes == classe)[1], ], inflos_obs)
ggsave("A2.eps", device = cairo_ps, width = 10, height = 5)
params_front_A[which(classes == classe)[1], ]
params_front_A[which(classes == classe)[1], ] %>% round(3)
classe <- 3
plot_decompo_A(params_front_A[which(classes == classe)[1], ], inflos_obs)
ggsave("A3.eps", device = cairo_ps, width = 10, height = 5)
params_front_A[which(classes == classe)[1], ] %>% round(3)

# Packages ----------------------------------------------------------------
library(mco) ## Pour nsga2
library(emoa) ## Pour is_dominated
library(snow) ## Pour la parallelisation
library(snowfall) ## Pour la parallelisation
source("/home/bastien/cecidomyie/model_R/objectif.R")
# NSGA-II -----------------------------------------------------------------
to_optimize <- function(x, fun_obj) {
## x servira pour la parallelisation
## fun_obj correspond a notre fonction objectif
binf <- c(0, 0, 0, 0, 0.1, 500, 1, 3)
bsup <- c(1, 1, 1, 1, 2, 20300, 11, 40)
res <- nsga2(fun_obj,
idim = 7,
odim = 3,
lower.bounds = binf,
upper.bounds = bsup,
popsize = 200,
generations = 200)
}
to_optimize(1, obj_C)
to_optimize(1, obj_C)
dA
duree_attra
bursts
duree_attra
arg
inflos_attractives(bursts, 16)
inflos_attractives(bursts, 3)
inflos_attractives(bursts, 2)
inflos_attractives(bursts, 1)
to_optimize(1, obj_C)
gamma
migration
arg
to_optimize(1, obj_C)
gamma
migration
duree_attra
rm(list =ls())
source('~/cecidomyie/model_R/model_new.R')
source('~/cecidomyie/model_R/plot_res.R')
source('~/cecidomyie/model_R/objective.R')
source('~/cecidomyie/model_R/objectif.R')
inflosCDE2 <- read.csv("../data/2017_inflosCDE_bloc2.csv")
inflosCDE2
inflosCDE2 <- read.csv("../data/2017_inflosCDE_bloc2.csv", row.names = 1)
inflosCDE2
inflosCDE2 <- read.csv("../data/2017_inflosCDE_bloc2.csv", row.names = 1) %>% as.matrix
inflosCDE2
inflosCDE2 %>% class()
inflosCDE2[, 1]
source('~/cecidomyie/model_R/model_new.R')
source('~/cecidomyie/model_R/plot_res.R')
plot_decompo_15sept_b2(c(0.021
0.105
0.938
0.916
1.992
516
6.018,0.004
), inflosCDE2)
plot_decompo_15sept_b2(c(0.021,
0.105,
0.938,
0.916,
1.992,
516,
6.018,0.004
), inflosCDE2)
ggsave("verger2_15sept.eps", device = cairo_ps, width = 10, height = 5)
rm(list = ls())
# Packages / data ---------------------------------------------------------
library(tidyverse)
library(corrplot)
source("model_new.R")
source("objectif.R")
source("plot_res.R")
load("/home/bastien/cecidomyie/model_R/calibration_C2.Rdata")
# Corrélations ------------------------------------------------------------
X <- scale(params_front_C2)
Y <- scale(pareto_front_C2)
matcor <- cor(cbind(X, Y), method = "spearman")
rownames(matcor) <- c(":gamma", ":p[m]", ":mu[ER]", ":mu[EH]",
":k", "stock", ":E[0] * mu[l]", "dA", "ER", "PS", "EH")
colnames(matcor) <- c(":gamma", ":p[m]", ":mu[ER]", ":mu[EH]",
":k", "stock", ":E[0] * mu[l]", "dA", "ER", "PS", "EH")
corrplot.mixed(matcor, tl.pos = "lt")
## On effectue une CAH
hca <- hclust(dist(X), method = "ward.D2")
inertie <- data.frame(height = rev(hca$height), nb_class = 1:(nrow(X)-1))
ggplot(inertie[1:25, ]) +
aes(y = height, x = nb_class) +
geom_step(lwd = 0.75) +
theme_bw() +
ylab("Inertie interne") +
xlab("Nombre de classes")
classes <- cutree(hca, 15)
params_C2
params_C2[, 8]
params_C2[, 8] %>% summary()
params_C2[, 8] %>% hist
params_C2[, 8] %>% hist(freq = DALSE)
params_C2[, 8] %>% hist(freq = FALSE)
source('~/cecidomyie/model_R/model_new.R')
source('~/cecidomyie/model_R/plot_res.R')
source('~/cecidomyie/model_R/objectif.R')
# Packages / data ---------------------------------------------------------
library(tidyverse)
library(corrplot)
source("model_new.R")
source("objectif.R")
source("plot_res.R")
load("/home/bastien/cecidomyie/model_R/calibration_C2.Rdata")
X <- scale(params_front_C2)
Y <- scale(pareto_front_C2)
matcor <- cor(cbind(X, Y), method = "spearman")
rownames(matcor) <- c(":gamma", ":p[m]", ":mu[ER]", ":mu[EH]",
":k", "stock", ":E[0] * mu[l]", "dA", "ER", "PS", "EH")
colnames(matcor) <- c(":gamma", ":p[m]", ":mu[ER]", ":mu[EH]",
":k", "stock", ":E[0] * mu[l]", "dA", "ER", "PS", "EH")
corrplot.mixed(matcor, tl.pos = "lt")
## On effectue une CAH
hca <- hclust(dist(X), method = "ward.D2")
inertie <- data.frame(height = rev(hca$height), nb_class = 1:(nrow(X)-1))
ggplot(inertie[1:25, ]) +
aes(y = height, x = nb_class) +
geom_step(lwd = 0.75) +
theme_bw() +
ylab("Inertie interne") +
xlab("Nombre de classes")
classes <- cutree(hca, 15)
classe <- 1
plot_decompo_C2(params_front_C2[which(classes == classe)[1], ], inflosCDE)
plot_decompo_C2(params_front_C2[which(classes == 2)[1], ], inflosCDE)
plot_decompo_C2(params_front_C2[which(classes == 3)[1], ], inflosCDE)
plot_decompo_C2(params_front_C2[which(classes == 2)[1], ], inflosCDE)
plot_decompo_C2(params_front_C2[which(classes == 3)[1], ], inflosCDE)
plot_decompo_C2(params_front_C2[which(classes == 4)[1], ], inflosCDE)
plot_decompo_C2(params_front_C2[which(classes == 5)[1], ], inflosCDE)
plot_decompo_C2(params_front_C2[which(classes == 6)[1], ], inflosCDE)
params_front_C2[which(classes == 6)[1], ]
plot_decompo_C2(params_front_C2[which(classes == 7)[1], ], inflosCDE)
plot_decompo_C2(params_front_C2[which(classes == 8)[1], ], inflosCDE)
plot_decompo_C2(params_front_C2[which(classes == 9)[1], ], inflosCDE)
plot_decompo_C2(params_front_C2[which(classes == 10)[1], ], inflosCDE)
plot_decompo_C2(params_front_C2[which(classes == 11)[1], ], inflosCDE)
plot_decompo_C2(params_front_C2[which(classes == 12)[1], ], inflosCDE)
plot_decompo_C2(params_front_C2[which(classes == 12)[2], ], inflosCDE)
plot_decompo_C2(params_front_C2[which(classes == 13)[1], ], inflosCDE)
plot_decompo_C2(params_front_C2[which(classes == 14)[1], ], inflosCDE)
plot_decompo_C2(params_front_C2[which(classes == 15)[1], ], inflosCDE)
params_C2[, 8] %>% hist()
as.data.frame(dA = params_C2[, 8]) %>% ggplot() + aes(x=dA) + geom_histogram()
as.data.frame(dA = params_C2[, 8]) %>% ggplot() + aes(x=dA) + geom_histogram()
as.data.frame(dA = params_C2[, 8]) %>% ggplot() + aes(dA) + geom_histogram()
as.data.frame(dA = params_C2[, 8]) %>% ggplot() + geom_histogram(dA)
as.data.frame(dA = params_C2[, 8]) %>% ggplot() + geom_histogram(x = dA)
as.data.frame(dA = params_C2[, 8]) %>% ggplot() + geom_histogram(aes(x = dA))
toto <- as.data.frame(dA = params_C2[, 8])
toto
dA = params_C2[, 8]
toto <- as.data.frame(dA)
toto
toto %>% ggplot() + aes(x=dA) + geom_histogram()
toto %>% ggplot() + aes(x=dA) + geom_histogram() + theme_bw()
toto %>% ggplot() + aes(x=dA) + geom_histogram() + theme_bw() + xlab("Durée d'attractivité des inflosrescences")
toto %>% ggplot() + aes(x=dA, stat(density)) + geom_histogram() + theme_bw() + xlab("Durée d'attractivité des inflosrescences")
toto %>% ggplot() + aes(x=dA, stat(density)) + geom_histogram() + theme_bw() + xlab("Durée d'attractivité des inflosrescences") + ylab("Fréquence")
toto %>% ggplot() + aes(x=dA, stat(density)) + geom_histogram(binwidth = 0.01) + theme_bw() + xlab("Durée d'attractivité des inflosrescences") + ylab("Fréquence")
toto %>% ggplot() + aes(x=dA, stat(density)) + geom_histogram(binwidth = 0.1) + theme_bw() + xlab("Durée d'attractivité des inflosrescences") + ylab("Fréquence")
toto %>% ggplot() + aes(x=dA, stat(density)) + geom_histogram(binwidth = 0.2) + theme_bw() + xlab("Durée d'attractivité des inflosrescences") + ylab("Fréquence")
ggsave("dA.eps", width = 10, height = 7)
# Corrélations ------------------------------------------------------------
which(9 <= params_front_C2[, 8] <= 16)
# Corrélations ------------------------------------------------------------
which(9 <= params_front_C2[, 8] & params_front_C2[, 8] <= 16)
# Corrélations ------------------------------------------------------------
ind_dA <- which(9 <= params_front_C2[, 8] & params_front_C2[, 8] <= 16)
params_dA_C2 <- params_front_C2[ind_dA, ]
# Corrélations ------------------------------------------------------------
ind_dA <- which(9 <= params_front_C2[, 8] & params_front_C2[, 8] <= 16)
params_dA_C2 <- params_front_C2[ind_dA, ]
X <- scale(params_dA_C2)
Y <- scale(pareto_front_C2[ind_dA, ])
matcor <- cor(cbind(X, Y), method = "spearman")
rownames(matcor) <- c(":gamma", ":p[m]", ":mu[ER]", ":mu[EH]",
":k", "stock", ":E[0] * mu[l]", "dA", "ER", "PS", "EH")
colnames(matcor) <- c(":gamma", ":p[m]", ":mu[ER]", ":mu[EH]",
":k", "stock", ":E[0] * mu[l]", "dA", "ER", "PS", "EH")
corrplot.mixed(matcor, tl.pos = "lt")
## On effectue une CAH
hca <- hclust(dist(X), method = "ward.D2")
inertie <- data.frame(height = rev(hca$height), nb_class = 1:(nrow(X)-1))
ggplot(inertie[1:25, ]) +
aes(y = height, x = nb_class) +
geom_step(lwd = 0.75) +
theme_bw() +
ylab("Inertie interne") +
xlab("Nombre de classes")
classes <- cutree(hca, 12)
nrow(params_dA_C2)
classe <- 1
plot_decompo_C2(params_dA_C2[which(classes == classe)[1], ], inflosCDE)
plot_decompo_C2(params_dA_C2[which(classes == 2)[1], ], inflosCDE)
plot_decompo_C2(params_dA_C2[which(classes == 3)[1], ], inflosCDE)
plot_decompo_C2(params_dA_C2[which(classes == 4)[1], ], inflosCDE)
plot_decompo_C2(params_dA_C2[which(classes == 5)[1], ], inflosCDE)
plot_decompo_C2(params_dA_C2[which(classes == 6)[1], ], inflosCDE)
plot_decompo_C2(params_dA_C2[which(classes == 7)[1], ], inflosCDE)
plot_decompo_C2(params_dA_C2[which(classes == 8)[1], ], inflosCDE)
plot_decompo_C2(params_dA_C2[which(classes == 9)[1], ], inflosCDE)
plot_decompo_C2(params_dA_C2[which(classes == 10)[1], ], inflosCDE)
plot_decompo_C2(params_dA_C2[which(classes == 11)[1], ], inflosCDE)
plot_decompo_C2(params_dA_C2[which(classes == 12)[1], ], inflosCDE)
params_dA_C2[, 4] %>% which.max()
plot_decompo_C2(params_dA_C2[288, ], inflosCDE)
plot_decompo_C2(params_dA_C2[which(classes == 1)[1], ], inflosCDE)
plot_decompo_C2(params_dA_C2[which(classes == 8)[1], ], inflosCDE)
plot_decompo_C2(params_dA_C2[which(classes == 9)[1], ], inflosCDE)
plot_decompo_C2(params_dA_C2[which(classes == 2)[1], ], inflosCDE)
plot_decompo_C2(params_dA_C2[which(classes == 2)[2], ], inflosCDE)
params_dA_C2[, 1] %>% which.max()
plot_decompo_C2(params_dA_C2[285, ], inflosCDE)
plot_decompo_C2(params_dA_C2[which(classes == 2)[1], ], inflosCDE)
ggsave("C2_1.eps", device = cairo_ps, width = 10, height = 5)
params_dA_C2[which(classes == 2)[1], ]
params_dA_C2[which(classes == 2)[1], ] %>% round(3)
plot_decompo_C2(params_dA_C2[which(classes == 8)[1], ], inflosCDE)
ggsave("C2_2.eps", device = cairo_ps, width = 10, height = 5)
params_dA_C2[which(classes == 8)[1], ]
params_dA_C2[which(classes == 8)[1], ] %>% round(3)
plot_decompo_C2(params_dA_C2[which(classes == 9)[1], ], inflosCDE)
ggsave("C2_3.eps", device = cairo_ps, width = 10, height = 5)
params_dA_C2[which(classes == 9)[1], ] %>% round(3)
rm(list =ls())
source('~/cecidomyie/model_R/model_new.R')
source('~/cecidomyie/model_R/model_new.R')
rm(list =ls())
source('~/cecidomyie/model_R/opimisation_B2.R')
library(tidyverse)
library(corrplot)
source("model_new.R")
source("objectif.R")
source("plot_res.R")
load("/home/bastien/cecidomyie/model_R/calibration_B2.Rdata")
data.frame(varpi = params_front_B2[, 8]) %>% ggplot() + aes(x = varpi) + geom_histogram()
data.frame(varpi = params_front_B2[, 8]) %>% ggplot() + aes(x = varpi) + geom_histogram(binwidth = 0.1)
data.frame(varpi = params_front_B2[, 8]) %>% ggplot() + aes(x = varpi) + geom_histogram(binwidth = 0.01)
data.frame(varpi = params_front_B2[, 8]) %>% ggplot() + aes(x = varpi) + geom_histogram(binwidth = 0.05)
data.frame(varpi = params_front_B2[, 8]) %>% ggplot() + aes(x = varpi) + geom_histogram(binwidth = 0.01)
data.frame(varpi = params_front_B2[, 9]) %>% ggplot() + aes(x = varpi) + geom_histogram(binwidth = 0.01)
data.frame(varpi = params_front_B2[, 8]) %>% ggplot() + aes(x = varpi) + geom_histogram(binwidth = 0.01)
data.frame(varpi = params_front_B2[, 8]) %>% ggplot() + aes(x = varpi) + geom_histogram(binwidth = 0.01) + theme_bw()
data.frame(varpi = params_front_B2[, 8]) %>% ggplot() + aes(x = varpi, stat(density)) + geom_histogram(binwidth = 0.01) + theme_bw()
data.frame(varpi = params_front_B2[, 8]) %>% ggplot() + aes(x = varpi) + geom_histogram(binwidth = 0.01) + theme_bw()
data.frame(varpi = params_front_B2[, 8]) %>% ggplot() + aes(x = varpi) + geom_histogram(binwidth = 0.01) + theme_bw() + ylab("Occurrences")
data.frame(varpi = params_front_B2[, 8]) %>% ggplot() + aes(x = varpi) + geom_histogram(binwidth = 0.01) + theme_bw() + ylab("Nombre d'occurrences") + xlab(expression(":varpi"))
data.frame(varpi = params_front_B2[, 8]) %>% ggplot() + aes(x = varpi) + geom_histogram(binwidth = 0.01) + theme_bw() + ylab("Nombre d'occurrences") + xlab(expression(":pi"))
data.frame(varpi = params_front_B2[, 8]) %>% ggplot() + aes(x = varpi) + geom_histogram(binwidth = 0.01) + theme_bw() + ylab("Nombre d'occurrences") + xlab(expression("pi"))
data.frame(varpi = params_front_B2[, 8]) %>% ggplot() + aes(x = varpi) + geom_histogram(binwidth = 0.01) + theme_bw() + ylab("Nombre d'occurrences") + xlab(expression(pi))
data.frame(varpi = params_front_B2[, 8]) %>% ggplot() + aes(x = varpi) + geom_histogram(binwidth = 0.01) + theme_bw() + ylab("Nombre d'occurrences") + xlab(expression(varpi))
# Corrélations ------------------------------------------------------------
X <- scale(params_dA_C2)
Y <- scale(pareto_front_C2[ind_dA, ])
matcor <- cor(cbind(X, Y), method = "spearman")
rownames(matcor) <- c(":gamma", ":p[m]", ":mu[ER]", ":mu[EH]",
":k", "stock", ":E[0] * mu[l]", "varpi", "intercept", "ER", "PS", "EH")
colnames(matcor) <- c(":gamma", ":p[m]", ":mu[ER]", ":mu[EH]",
":k", "stock", ":E[0] * mu[l]", "varpi", "intercept", "ER", "PS", "EH")
corrplot.mixed(matcor, tl.pos = "lt")
# Corrélations ------------------------------------------------------------
X <- scale(params_front_B2)
Y <- scale(pareto_front_B2)
matcor <- cor(cbind(X, Y), method = "spearman")
rownames(matcor) <- c(":gamma", ":p[m]", ":mu[ER]", ":mu[EH]",
":k", "stock", ":E[0] * mu[l]", "varpi", "intercept", "ER", "PS", "EH")
colnames(matcor) <- c(":gamma", ":p[m]", ":mu[ER]", ":mu[EH]",
":k", "stock", ":E[0] * mu[l]", "varpi", "intercept", "ER", "PS", "EH")
corrplot.mixed(matcor, tl.pos = "lt")
## On effectue une CAH
hca <- hclust(dist(X), method = "ward.D2")
inertie <- data.frame(height = rev(hca$height), nb_class = 1:(nrow(X)-1))
ggplot(inertie[1:25, ]) +
aes(y = height, x = nb_class) +
geom_step(lwd = 0.75) +
theme_bw() +
ylab("Inertie interne") +
xlab("Nombre de classes")
classes <- cutree(hca, 16)
classe <- 1
plot_decompo_B2(params_front_B2[which(classes == classe)[1], ], inflos_obs)
plot_decompo_B2(params_front_B2[which(classes == 2)[1], ], inflos_obs)
plot_decompo_B2(params_front_B2[which(classes == 2)[5], ], inflos_obs)
plot_decompo_B2(params_front_B2[which(classes == 3)[1], ], inflos_obs)
plot_decompo_B2(params_front_B2[which(classes == 4)[1], ], inflos_obs)
plot_decompo_B2(params_front_B2[which(classes == 5)[1], ], inflos_obs)
plot_decompo_B2(params_front_B2[which(classes == 6)[1], ], inflos_obs)
plot_decompo_B2(params_front_B2[which(classes == 7)[1], ], inflos_obs)
plot_decompo_B2(params_front_B2[which(classes == 8)[1], ], inflos_obs)
plot_decompo_B2(params_front_B2[which(classes == 9)[1], ], inflos_obs)
plot_decompo_B2(params_front_B2[which(classes == 10)[1], ], inflos_obs)
plot_decompo_B2(params_front_B2[which(classes == 11)[1], ], inflos_obs)
plot_decompo_B2(params_front_B2[which(classes == 12)[1], ], inflos_obs)
plot_decompo_B2(params_front_B2[which(classes == 13)[1], ], inflos_obs)
plot_decompo_B2(params_front_B2[which(classes == 14)[1], ], inflos_obs)
plot_decompo_B2(params_front_B2[which(classes == 15)[1], ], inflos_obs)
plot_decompo_B2(params_front_B2[which(classes == 16)[1], ], inflos_obs)
data.frame(varpi = params_front_B2[, 4]) %>% ggplot() + aes(x = varpi) + geom_histogram(binwidth = 0.01) + theme_bw() + ylab("Nombre d'occurrences") + xlab(expression(varpi))
data.frame(varpi = params_front_B2[, 5]) %>% ggplot() + aes(x = varpi) + geom_histogram(binwidth = 0.01) + theme_bw() + ylab("Nombre d'occurrences") + xlab(expression(varpi))
data.frame(varpi = params_front_B2[, 4]) %>% ggplot() + aes(x = varpi) + geom_histogram(binwidth = 0.01) + theme_bw() + ylab("Nombre d'occurrences") + xlab(expression(varpi))
data.frame(varpi = params_front_B2[, 5]) %>% ggplot() + aes(x = varpi) + geom_histogram(binwidth = 0.01) + theme_bw() + ylab("Nombre d'occurrences") + xlab(expression(varpi))
data.frame(varpi = params_front_B2[, 3]) %>% ggplot() + aes(x = varpi) + geom_histogram(binwidth = 0.01) + theme_bw() + ylab("Nombre d'occurrences") + xlab(expression(varpi))
data.frame(varpi = params_front_B2[, 4]) %>% ggplot() + aes(x = varpi) + geom_histogram(binwidth = 0.01) + theme_bw() + ylab("Nombre d'occurrences") + xlab(expression(varpi))
load("/home/bastien/cecidomyie/data/p_pup15j.Rdata")
plot(p_pup15j)
plot(p_pup15j - mean(p_pup15j))
plot((p_pup15j - mean(p_pup15j)) * params_front_B2[1, 8] + params_front_B2[, 9], type = "l")
plot((p_pup15j - mean(p_pup15j)) * params_front_B2[1, 8] + params_front_B2[, 9])
plot((p_pup15j - mean(p_pup15j)) * params_front_B2[1, 8] + params_front_B2[1, 9])
plot((p_pup15j - mean(p_pup15j)) * params_front_B2[1, 8] + params_front_B2[1, 9], type = "l")
params_front_B2[1, 9]
params_front_B2[, 9] %>% which.max()
plot((p_pup15j - mean(p_pup15j)) * params_front_B2[1806, 8] + params_front_B2[1806, 9], type = "l")
plot_decompo_B2(params_front_B2[1806, ], inflos_obs)
params_front_B2[1806, ] %>% round(3)
# Corrélations ------------------------------------------------------------
ind_inter <- which(params_front_B2[, 9] >= 0)
# Corrélations ------------------------------------------------------------
ind_inter
params_front_B2[, 9]
# Corrélations ------------------------------------------------------------
ind_inter <- which(params_front_B2[, 9] >= 0)
params_inter <- params_front_B2[ind_inter, ]
pareto_inter <- pareto_front_B2[ind_inter, ]
X <- scale(params_inter)
Y <- scale(pareto_inter)
matcor <- cor(cbind(X, Y), method = "spearman")
rownames(matcor) <- c(":gamma", ":p[m]", ":mu[ER]", ":mu[EH]",
":k", "stock", ":E[0] * mu[l]", "varpi", "intercept", "ER", "PS", "EH")
colnames(matcor) <- c(":gamma", ":p[m]", ":mu[ER]", ":mu[EH]",
":k", "stock", ":E[0] * mu[l]", "varpi", "intercept", "ER", "PS", "EH")
corrplot.mixed(matcor, tl.pos = "lt")
## On effectue une CAH
hca <- hclust(dist(X), method = "ward.D2")
inertie <- data.frame(height = rev(hca$height), nb_class = 1:(nrow(X)-1))
ggplot(inertie[1:25, ]) +
aes(y = height, x = nb_class) +
geom_step(lwd = 0.75) +
theme_bw() +
ylab("Inertie interne") +
xlab("Nombre de classes")
classes <- cutree(hca, 12)
classe <- 1
plot_decompo_B2(params_inter[which(classes == classe)[1], ], inflos_obs)
plot_decompo_B2(params_inter[which(classes == 2)[1], ], inflos_obs)
plot_decompo_B2(params_inter[which(classes == 3)[1], ], inflos_obs)
plot_decompo_B2(params_inter[which(classes == 4)[1], ], inflos_obs)
plot_decompo_B2(params_inter[which(classes == 5)[1], ], inflos_obs)
plot_decompo_B2(params_inter[which(classes == 6)[1], ], inflos_obs)
plot_decompo_B2(params_inter[which(classes == 7)[1], ], inflos_obs)
plot_decompo_B2(params_inter[which(classes == 8)[1], ], inflos_obs)
plot_decompo_B2(params_inter[which(classes == 9)[1], ], inflos_obs)
plot_decompo_B2(params_inter[which(classes == 10)[1], ], inflos_obs)
plot_decompo_B2(params_inter[which(classes == 11)[1], ], inflos_obs)
plot_decompo_B2(params_inter[which(classes == 12)[1], ], inflos_obs)
rm(list =ls())
source('~/cecidomyie/model_R/opimisation_B2.R')
rm(list=ls())
# Packages / data ---------------------------------------------------------
library(tidyverse)
library(corrplot)
source("model_new.R")
source("objectif.R")
source("plot_res.R")
load("/home/bastien/cecidomyie/model_R/calibration_B2.Rdata")
# Corrélations ------------------------------------------------------------
X <- scale(params_front_B2)
Y <- scale(pareto_front_B2)
matcor <- cor(cbind(X, Y), method = "spearman")
rownames(matcor) <- c(":gamma", ":p[m]", ":mu[ER]", ":mu[EH]",
":k", "stock", ":E[0] * mu[l]", "varpi", "intercept", "ER", "PS", "EH")
colnames(matcor) <- c(":gamma", ":p[m]", ":mu[ER]", ":mu[EH]",
":k", "stock", ":E[0] * mu[l]", "varpi", "intercept", "ER", "PS", "EH")
corrplot.mixed(matcor, tl.pos = "lt")
data.frame(varpi = params_front_B2[, 8]) %>% ggplot() + aes(x = varpi) + geom_histogram(binwidth = 0.01)
data.frame(varpi = params_front_B2[, 8]) %>% ggplot() + aes(x = varpi) + geom_histogram(binwidth = 0.001)
data.frame(varpi = params_front_B2[, 8]) %>% ggplot() + aes(x = varpi) + geom_histogram(binwidth = 0.005)
data.frame(varpi = params_front_B2[, 9]) %>% ggplot() + aes(x = varpi) + geom_histogram(binwidth = 0.005)
data.frame(varpi = params_front_B2[, 9]) %>% ggplot() + aes(x = varpi) + geom_histogram(binwidth = 0.005) + theme_bw()
data.frame(varpi = params_front_B2[, 9]) %>% ggplot() + aes(x = varpi) + geom_histogram(binwidth = 0.005) + theme_bw() + ylab("Nombre d'occurrences") + xlab
data.frame(varpi = params_front_B2[, 9]) %>% ggplot() + aes(x = varpi) + geom_histogram(binwidth = 0.005) + theme_bw() + ylab("Nombre d'occurrences") + xlab("p[pup]")
data.frame(varpi = params_front_B2[, 9]) %>% ggplot() + aes(x = varpi) + geom_histogram(binwidth = 0.005) + theme_bw() + ylab("Nombre d'occurrences") + xlab(expression(p[pup]))
data.frame(varpi = params_front_B2[, 9]) %>% ggplot() + aes(x = varpi) + geom_histogram(binwidth = 0.005) + theme_bw() + ylab("Nombre d'occurrences") + xlab(expression(p[pup]*))
data.frame(varpi = params_front_B2[, 9]) %>% ggplot() + aes(x = varpi) + geom_histogram(binwidth = 0.005) + theme_bw() + ylab("Nombre d'occurrences") + xlab(expression(p[pup]^{*}))
data.frame(varpi = params_front_B2[, 9]) %>% ggplot() + aes(x = varpi) + geom_histogram(binwidth = 0.005) + theme_bw() + ylab("Nombre d'occurrences") + xlab(expression(p[pup]^{x}))
data.frame(varpi = params_front_B2[, 9]) %>% ggplot() + aes(x = varpi) + geom_histogram(binwidth = 0.005) + theme_bw() + ylab("Nombre d'occurrences") + xlab(expression(p[pup]^{intercept}))
data.frame(varpi = params_front_B2[, 9]) %>% ggplot() + aes(x = varpi) + geom_histogram(binwidth = 0.005) + theme_bw() + ylab("Nombre d'occurrences") + xlab(expression(p[pup]^{#}))
data.frame(varpi = params_front_B2[, 9]) %>% ggplot() + aes(x = varpi) + geom_histogram(binwidth = 0.005) + theme_bw() + ylab("Nombre d'occurrences") + xlab(expression(p[pup]^{#}))
fe
data.frame(varpi = params_front_B2[, 9]) %>% ggplot() + aes(x = varpi) + geom_histogram(binwidth = 0.005) + theme_bw() + ylab("Nombre d'occurrences") + xlab(expression(moyenne))
data.frame(varpi = params_front_B2[, 9]) %>% ggplot() + aes(x = varpi) + geom_histogram(binwidth = 0.005) + theme_bw() + ylab("Nombre d'occurrences") + xlab(Moyenne)
data.frame(varpi = params_front_B2[, 9]) %>% ggplot() + aes(x = varpi) + geom_histogram(binwidth = 0.005) + theme_bw() + ylab("Nombre d'occurrences") + xlab("Moyenne")
ggsave("intercept.eps", width = 5, height = 3.5)
data.frame(varpi = params_front_B2[, 8]) %>% ggplot() + aes(x = varpi) + geom_histogram(binwidth = 0.005) + theme_bw() + ylab("Nombre d'occurrences") + xlab("Moyenne")
data.frame(varpi = params_front_B2[, 8]) %>% ggplot() + aes(x = varpi) + geom_histogram(binwidth = 0.005) + theme_bw() + ylab("Nombre d'occurrences") + xlab("varpi")
data.frame(varpi = params_front_B2[, 8]) %>% ggplot() + aes(x = varpi) + geom_histogram(binwidth = 0.005) + theme_bw() + ylab("Nombre d'occurrences") + xlab(expression(varpi))
data.frame(varpi = params_front_B2[, 8]) %>% ggplot() + aes(x = varpi) + geom_histogram(binwidth = 0.005) + theme_bw() + ylab("Nombre d'occurrences") + xlab(expression(omega))
data.frame(varpi = params_front_B2[, 8]) %>% ggplot() + aes(x = varpi) + geom_histogram(binwidth = 0.005) + theme_bw() + ylab("Nombre d'occurrences") + xlab(expression(omega1))
ggsave("varpi.eps", width = 5, height = 3.5)
load("/home/bastien/cecidomyie/data/p_pup15j.Rdata")
p_pup15j
(p_pup15j - mean(p_pup15j)) * 1 + 1
plot((p_pup15j - mean(p_pup15j)) * 1 + 1)
plot(pmin((p_pup15j - mean(p_pup15j)) * 1 + 1, 1), type =" l")
plot(pmin((p_pup15j - mean(p_pup15j)) * 1 + 1, 1), type ="l")
data.frame(pupaison = pmin((p_pup15j - mean(p_pup15j)) * 1 + 1, 1), date = date2017) %>% ggplot() + aes(x=date, y=pupaison) + geom_line()
data.frame(pupaison = pmin((p_pup15j - mean(p_pup15j)) * 1 + 1, 1), date = date2017) %>% ggplot() + aes(x=date, y=pupaison) + geom_line() + theme_bw()
data.frame(pupaison = pmin((p_pup15j - mean(p_pup15j)) * 1 + 1, 1), date = date2017) %>% ggplot() + aes(x=date, y=pupaison) + geom_line() + theme_bw() + xlab("") + ylab("Probabilité d'entrer en pupaison")
ggsave("pupaison_chelou.eps", width = 6, height = 3.5)
X <- scale(params_front_B2)
Y <- scale(pareto_front_B2)
matcor <- cor(cbind(X, Y), method = "spearman")
rownames(matcor) <- c(":gamma", ":p[m]", ":mu[ER]", ":mu[EH]",
":k", "stock", ":E[0] * mu[l]", "varpi", "intercept", "ER", "PS", "EH")
colnames(matcor) <- c(":gamma", ":p[m]", ":mu[ER]", ":mu[EH]",
":k", "stock", ":E[0] * mu[l]", "varpi", "intercept", "ER", "PS", "EH")
corrplot.mixed(matcor, tl.pos = "lt")
## On effectue une CAH
hca <- hclust(dist(X), method = "ward.D2")
inertie <- data.frame(height = rev(hca$height), nb_class = 1:(nrow(X)-1))
ggplot(inertie[1:25, ]) +
aes(y = height, x = nb_class) +
geom_step(lwd = 0.75) +
theme_bw() +
ylab("Inertie interne") +
xlab("Nombre de classes")
classes <- cutree(hca, 12)
classe <- 1
plot_decompo_B2(params_inter[which(classes == classe)[1], ], inflos_obs)
plot_decompo_B2(params_front_B2[which(classes == classe)[1], ], inflos_obs)
plot_decompo_B2(params_front_B2[which(classes == 2)[1], ], inflos_obs)
plot_decompo_B2(params_front_B2[which(classes == 3)[1], ], inflos_obs)
plot_decompo_B2(params_front_B2[which(classes == 4)[1], ], inflos_obs)
plot_decompo_B2(params_front_B2[which(classes == 5)[1], ], inflos_obs)
plot_decompo_B2(params_front_B2[which(classes == 6)[1], ], inflos_obs)
plot_decompo_B2(params_front_B2[which(classes == 7)[1], ], inflos_obs)
plot_decompo_B2(params_front_B2[which(classes == 8)[1], ], inflos_obs)
plot_decompo_B2(params_front_B2[which(classes == 9)[1], ], inflos_obs)
plot_decompo_B2(params_front_B2[which(classes == 10)[1], ], inflos_obs)
plot_decompo_B2(params_front_B2[which(classes == 11)[1], ], inflos_obs)
plot_decompo_B2(params_front_B2[which(classes == 12)[1], ], inflos_obs)
plot_decompo_B2(params_front_B2[which(classes == 1)[1], ], inflos_obs)
rm(list =ls())
# Packages / data ---------------------------------------------------------
library(tidyverse)
library(corrplot)
source("model_new.R")
source("objectif.R")
source("plot_res.R")
load("/home/bastien/cecidomyie/model_R/calibration_D.Rdata")
# Corrélations ------------------------------------------------------------
X <- scale(params_front_D)
Y <- scale(pareto_front_D)
matcor <- cor(cbind(X, Y), method = "spearman")
rownames(matcor) <- c(":gamma", ":p[m]", ":mu[ER]", ":mu[EH]",
":k", "stock", ":E[0] * mu[l]", "season", "ER", "PS", "EH")
colnames(matcor) <- c(":gamma", ":p[m]", ":mu[ER]", ":mu[EH]",
":k", "stock", ":E[0] * mu[l]", "season", "ER", "PS", "EH")
corrplot.mixed(matcor, tl.pos = "lt")
## On effectue une CAH
hca <- hclust(dist(X), method = "ward.D2")
inertie <- data.frame(height = rev(hca$height), nb_class = 1:(nrow(X)-1))
ggplot(inertie[1:25, ]) +
aes(y = height, x = nb_class) +
geom_step(lwd = 0.75) +
theme_bw() +
ylab("Inertie interne") +
xlab("Nombre de classes")
classes <- cutree(hca, 14)
classe <- 1 ## Affiche une solution de la classe 1
plot_decompo_season(params_front_D[which(classes == classe)[1], ], inflosCDE)
plot_decompo_season(params_front_D[which(classes == 1)[1], ], inflosCDE)
plot_decompo_season(params_front_D[which(classes == 2)[1], ], inflosCDE)
plot_decompo_season(params_front_D[which(classes == 3)[1], ], inflosCDE)
plot_decompo_season(params_front_D[which(classes == 4)[1], ], inflosCDE)
plot_decompo_season(params_front_D[which(classes == 5)[1], ], inflosCDE)
plot_decompo_season(params_front_D[which(classes == 6)[1], ], inflosCDE)
plot_decompo_season(params_front_D[which(classes == 7)[1], ], inflosCDE)
plot_decompo_season(params_front_D[which(classes == 8)[1], ], inflosCDE)
plot_decompo_season(params_front_D[which(classes == 9)[1], ], inflosCDE)
plot_decompo_season(params_front_D[which(classes == 10)[1], ], inflosCDE)
plot_decompo_season(params_front_D[which(classes == 11)[1], ], inflosCDE)
plot_decompo_season(params_front_D[which(classes == 12)[1], ], inflosCDE)
plot_decompo_season(params_front_D[which(classes == 1)[1], ], inflosCDE)
plot_decompo_season(params_front_D[which(classes == 1)[2], ], inflosCDE)
plot_decompo_season(params_front_D[which(classes == 1)[3], ], inflosCDE)
plot_decompo_season(params_front_D[which(classes == 1)[4], ], inflosCDE)
plot_decompo_season(params_front_D[which(classes == 1)[5], ], inflosCDE)
plot_decompo_season(params_front_D[which(classes == 1)[1], ], inflosCDE)
plot_decompo_season(params_front_D[which(classes == 1)[5], ], inflosCDE)
ggsave("modelD_scen2.eps", device = cairo_ps, width = 10, height = 5)
params_front_D[which(classes == 1)[5], ] %>% round(3)
plot_decompo_season(params_front_D[which(classes == 9)[5], ], inflosCDE)
plot_decompo_season(params_front_D[which(classes == 9)[4], ], inflosCDE)
plot_decompo_season(params_front_D[which(classes == 9)[3], ], inflosCDE)
plot_decompo_season(params_front_D[which(classes == 9)[2], ], inflosCDE)
plot_decompo_season(params_front_D[which(classes == 9)[1], ], inflosCDE)
plot_decompo_season(params_front_D[which(classes == 10)[1], ], inflosCDE)
plot_decompo_season(params_front_D[which(classes == 10)[2], ], inflosCDE)
ggsave("modelD_scen3.eps", device = cairo_ps, width = 10, height = 5)
params_front_D[which(classes == 10)[2], ] %>% round(3)

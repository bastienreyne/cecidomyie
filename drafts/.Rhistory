legend("topleft",lty=1,col=c(1,2,3),legend=c("mu","CDF","rnorm"))
points(day,obs,type="b")
# m?thode 2: dur?e de vie fix?e par CDF(mu,sigma)
I_fun2 <- function(dA=50) {
nI[1] <- fB[1]
for (t in day[-1]){
temp <- 0
for (j in 1:min(dA,t-1)) {
temp <- temp + fB[t-j]*(1-Fnorm[j])
}
nI[t] <- fB[t] + temp
}
nI
}
plot(NA, NA, xlim=range(day), ylim=c(0,max(cumsum(fB))), xlab="day", ylab="I",
main = "Inflorescences I(t) / C-D-E-F (50j)")
points(day, obs, type="b", col=gray(0.5))
points(day, I_fun1(50), type="l", col=1, lwd=2)
points(day, I_fun2(50), type="l", col=2, lwd=2)
points(day, I_fun3(50), type="l", col=3, lwd=2)
## 0/ Dynamiques de d?bourrement des inflorescences (instantann?es et cumul?es)
#-------------------------------------------------------------------------------
plot(day, fB, type="h", main="B(t)")
plot(NA, NA, xlim=range(day), ylim=c(0,max(cumsum(fB))), xlab="day", ylab="I",
main = "Inflorescences I(t) / C-D-E-F (50j)")
points(day, obs, type="b", col=gray(0.5))
points(day, I_fun1(50), type="l", col=1, lwd=2)
points(day, I_fun2(50), type="l", col=2, lwd=2)
points(day, I_fun3(50), type="l", col=3, lwd=2)
legend("topleft",lty=1,col=c(1,2,3),legend=c("mu","CDF_mu","rnorm_mu"),title="Mortalit?")
plot(NA, NA, xlim=range(day), ylim=c(0,max(cumsum(fB))), xlab="day", ylab="I",
main = "Inflorescences I(t) / C-D-E-F/2 (33j)")
points(day, obs, type="b", col=gray(0.5))
points(day, I_fun1(33), type="l", col=1, lwd=2)
points(day, I_fun2(33), type="l", col=2, lwd=2)
points(day, I_fun3(33), type="l", col=3, lwd=2)
legend("topleft",lty=1,col=c(1,2,3),legend=c("mu","CDF_mu","rnorm_mu"),title="Mortalit?")
plot(NA, NA, xlim=range(day), ylim=c(0,max(cumsum(fB))), xlab="day", ylab="I",
main = "Inflorescences I(t) / C-D-E (16j)")
points(day, obs, type="b", col=gray(0.5))
points(day, I_fun1(16), type="l", col=1, lwd=2)
points(day, I_fun2(16), type="l", col=2, lwd=2)
points(day, I_fun3(16), type="l", col=3, lwd=2)
legend("topleft",lty=1,col=c(1,2,3),legend=c("mu","CDF_mu","rnorm_mu"),title="Mortalit?")
dateM <- B + mu
for (i in day){
nI[i] <- length(which(B<=i & i<dateM)) }
plot(day,nI,ylim=c(0,max(cumsum(fB))),type="l",col=1,main=paste("mu=",mu," , sigma=", sigma))
nI[1] <- fB[1]
for (t in day[-1]){
temp <- 0
for (j in 1:min(50,t-1)) {
temp <- temp + fB[t-j]*(1-Fnorm[j])
}
nI[t] <- fB[t] + temp
}
points(day,nI,type="l",col=2)
### Dynamique 2_c - dur?e de vie fix?e par rnorm(mu,sigma)
duree <- round(rnorm(length(B),mu,sigma))
duree <- ifelse(duree<0,0,duree)
duree <- ifelse(duree>50,50,duree)
summary(duree)
table(duree)
dateM <- B + duree
for (i in day){
nI[i] <- length(which(B<=i & i<dateM)) }
points(day,nI,type="l",col=3)
legend("topleft",lty=1,col=c(1,2,3),legend=c("mu","CDF","rnorm"))
points(day,obs,type="b")
plot(NA, NA, xlim=range(day), ylim=c(0,max(cumsum(fB))), xlab="day", ylab="I",
main = "Inflorescences I(t) / C-D-E-F (50j)")
points(day, I_fun2(50), type="l", col=2, lwd=2)
points(day, I_fun2(33), type="l", col=4, lwd=2)
points(day, I_fun2(16), type="l", col=5, lwd=2)
rm(list = ls())
library(tidyverse)
library(magrittr)
load("../data/Btc1.Rdata")
Btc1_EH
plot(Btc1_EH)
plot(Btc1_EH, type = "h")
load("../data/Bts.Rdata")
plot(Bts_EH, type = "h")
I_fun0 <- function(dA = 16) {
dateM <- B + dA
for (i in day){
nI[i] <- length(which(B <= i & i < dateM))
}
nI
}
I_fun0 <- function(B, dA = 16) {
dateM <- B + dA
for (i in day){
nI[i] <- length(which(B <= i & i < dateM))
}
nI
}
B
day <- c(1:81)
nI <- vector(length=81)
obs <- c(142, 181, 219, 258, 297, 336, 374, 413, 428, 443, 458, 474, 489, 504, 519, 542, 564, 587, 610, 633, 655, 678, 655, 632, 610, 587, 564, 542, 519, 496, 770, 1044, 1033, 1023, 1012, 1002, 991, 947, 903, 1154, 1404, 1655, 1906, 2199, 2492, 2785, 2921, 3056, 3192, 3327, 3463, 4044, 4626, 4901, 5176, 5450, 5725, 6000, 5547, 5094, 5143, 5192, 5242, 5291, 5340, 4886, 4431, 4589, 4746, 4904, 5062, 4563, 4063, 3564, 3291, 3018, 2745, 2472, 2170, 1869, 1567)
fB <- c(141.92294040705966, 186.6334908441623, 43.34381485506992, 42.07675543819867, 42.08353367877285, 42.59466012482839, 38.14798638252914, 15.554169018743577, 43.141230774750504, 46.574374342611065, 12.307367537356853, 11.465928073257686, 11.472914824995875, 7.781986327928723, 6.730357659949773, 51.09809483341888, 53.40147639509346, 11.532798078224012, 8.189628979044484, 5.1532628275685, 1.7087423799955634, 49.00979644940681, 7.412255116620066, 6.78239321165833, 0.0, 0.0, 0.0, 1.5054870789610768, 6.952216774570742, 9.394363880094566, 306.8546986120198, 237.42503956754135, 14.535226189198639, 12.890098289770728, 12.487482083631168, 12.288918012098904, 0.0, 0.0, 0.0, 260.4118492204183, 284.0479672185972, 287.2643050242877, 289.4278534151775, 332.90277617478824, 336.1498723067778, 338.59770618885665, 184.18936600337173, 181.84038476272488, 185.86982863689312, 187.0435632348303, 190.84987165652052, 651.3787253893967, 654.6425239996113, 352.19111580333356, 351.03593681660874, 354.3358607054422, 317.41054007573774, 0.0, 0.0, 0.0, 0.0, 0.0, 31.287990892577785, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
fB <- round(fB)
B <- rep(day,fB)
#-------------------------------
B
day <- 1:80
day
burst_simu_ER <- rep(day, round(Bts_ER))
burst_simu_ER
Fnorm <- cumsum(dnorm(c(1:50), mu, sigma))
mu <- 29
sigma <- 14
Fnorm <- cumsum(dnorm(c(1:50), mu, sigma))
plot(Fnorm)
I_fun2 <- function(dA = 16) {
nI[1] <- fB[1]
for (t in day[-1]) {
temp <- 0
for (j in 1:min(dA, t-1)) {
temp <- temp + fB[t-j] * (1 - Fnorm[j])
}
nI[t] <- fB[t] + temp
}
nI
}
rm(list = ls())
# Packages / data ---------------------------------------------------------
library(tidyverse)
library(magrittr)
load("../data/Btc1.Rdata") ## Débourrements observés mis à l'échelle
load("../data/Bts.Rdata") ## Débourrements simulés mis à l'échelle
mu <- 29
sigma <- 14
Fnorm <- cumsum(dnorm(c(1:50), mu, sigma))
I_fun2 <- function(fB, dA = 16) {
nI[1] <- fB[1]
for (t in day[-1]) {
temp <- 0
for (j in 1:min(dA, t-1)) {
temp <- temp + fB[t-j] * (1 - Fnorm[j])
}
nI[t] <- fB[t] + temp
}
nI
}
inflosCDE16j_ER <- I_fun2(Bts_ER)
nI <- vector(length=81)
nI
I_fun2 <- function(fB, dA = 16) {
nI <- rep(NA, 80)
nI[1] <- fB[1]
for (t in day[-1]) {
temp <- 0
for (j in 1:min(dA, t-1)) {
temp <- temp + fB[t-j] * (1 - Fnorm[j])
}
nI[t] <- fB[t] + temp
}
nI
}
rm(list = ls())
# Packages / data ---------------------------------------------------------
library(tidyverse)
library(magrittr)
load("../data/Btc1.Rdata") ## Débourrements observés mis à l'échelle
load("../data/Bts.Rdata") ## Débourrements simulés mis à l'échelle
day <- 1:80
mu <- 29
sigma <- 14
Fnorm <- cumsum(dnorm(c(1:50), mu, sigma))
I_fun2 <- function(fB, dA = 16) {
nI <- rep(NA, 80)
nI[1] <- fB[1]
for (t in day[-1]) {
temp <- 0
for (j in 1:min(dA, t-1)) {
temp <- temp + fB[t-j] * (1 - Fnorm[j])
}
nI[t] <- fB[t] + temp
}
nI
}
inflosCDE16j_ER <- I_fun2(Bts_ER)
plot(inflosCDE16j_ER)
plot(inflosCDE16j_ER, type = "l")
# Packages / data ---------------------------------------------------------
library(tidyverse)
library(magrittr)
load("../data/Btc1.Rdata") ## Débourrements observés mis à l'échelle
load("../data/Bts.Rdata") ## Débourrements simulés mis à l'échelle
day <- 1:80
mu <- 29
sigma <- 14
Fnorm <- cumsum(dnorm(c(1:50), mu, sigma))
# Simulation (débourrements simulés) --------------------------------------
I_fun2 <- function(fB, dA = 16) {
nI <- rep(NA, 80)
nI[1] <- fB[1]
for (t in day[-1]) {
temp <- 0
for (j in 1:min(dA, t-1)) {
temp <- temp + fB[t-j] * (1 - Fnorm[j])
}
nI[t] <- fB[t] + temp
}
nI
}
inflosCDE16j_sim_ER <- I_fun2(Bts_ER)
inflosCDE16j_sim_PS <- I_fun2(Bts_PS)
inflosCDE16j_sim_EH <- I_fun2(Bts_EH)
# Simulation (débourrements observés) -------------------------------------
inflosCDE16j_obs_ER <- I_fun2(Btc1_ER)
inflosCDE16j_obs_PS <- I_fun2(Btc1_PS)
inflosCDE16j_obs_EH <- I_fun2(Btc1_EH)
lines(inflosCDE16j_obs_ER, col = "red")
load("../data/date2017.Rdata")
rep(date2017, 6)
rep(c("obs", "sim"), 240)
rep(c("obs", "sim"), each = 240)
rep(c("ER", "PS", "EH"), each = 80, times = 3)
df_to_plot <- cbind(date = rep(date2017, 6),
inflos = c(inflosCDE16j_obs_ER,
inflosCDE16j_obs_PS,
inflosCDE16j_obs_EH,
inflosCDE16j_sim_ER,
inflosCDE16j_sim_PS,
inflosCDE16j_sim_EH),
burst = rep(c("obs", "sim"), each = 240),
sol = factor(rep(c("Enherbement ras", "Paillage synthétique",
"Enherbement haut"), each = 80, times = 3),
levels = c("Enherbement ras", "Paillage synthétique",
"Enherbement haut")))
date
c(inflosCDE16j_obs_ER,
inflosCDE16j_obs_PS,
inflosCDE16j_obs_EH,
inflosCDE16j_sim_ER,
inflosCDE16j_sim_PS,
inflosCDE16j_sim_EH)
c(inflosCDE16j_obs_ER,
inflosCDE16j_obs_PS,
inflosCDE16j_obs_EH,
inflosCDE16j_sim_ER,
inflosCDE16j_sim_PS,
inflosCDE16j_sim_EH) %>% length
80*6
date = rep(date2017, 6) %>% length
rep(date2017, 6) %>% length
factor(rep(c("Enherbement ras", "Paillage synthétique",
"Enherbement haut"), each = 80, times = 3),
levels = c("Enherbement ras", "Paillage synthétique",
"Enherbement haut"))
factor(rep(c("Enherbement ras", "Paillage synthétique",
"Enherbement haut"), each = 80, times = 3),
levels = c("Enherbement ras", "Paillage synthétique",
"Enherbement haut")) %>% length()
df_to_plot <- cbind(date = rep(date2017, 6),
inflos = c(inflosCDE16j_obs_ER,
inflosCDE16j_obs_PS,
inflosCDE16j_obs_EH,
inflosCDE16j_sim_ER,
inflosCDE16j_sim_PS,
inflosCDE16j_sim_EH),
burst = rep(c("obs", "sim"), each = 240),
sol = factor(rep(c("Enherbement ras", "Paillage synthétique",
"Enherbement haut"), each = 80, times = 2),
levels = c("Enherbement ras", "Paillage synthétique",
"Enherbement haut")))
df_to_plot %>% ggplot +
aes(x = date, y = inflos, color = burst) +
theme_bw() +
geom_line(lwd = 0.75) +
facet_grid(. ~ sol)
df_to_plot <- data.frame(date = rep(date2017, 6),
inflos = c(inflosCDE16j_obs_ER,
inflosCDE16j_obs_PS,
inflosCDE16j_obs_EH,
inflosCDE16j_sim_ER,
inflosCDE16j_sim_PS,
inflosCDE16j_sim_EH),
burst = rep(c("obs", "sim"), each = 240),
sol = factor(rep(c("Enherbement ras", "Paillage synthétique",
"Enherbement haut"), each = 80, times = 2),
levels = c("Enherbement ras", "Paillage synthétique",
"Enherbement haut")))
df_to_plot %>% ggplot +
aes(x = date, y = inflos, color = burst) +
theme_bw() +
geom_line(lwd = 0.75) +
facet_grid(. ~ sol)
df_to_plot %>% ggplot +
aes(x = date, y = inflos, color = burst) +
theme_bw() +
geom_line(lwd = 0.75) +
facet_grid(. ~ sol) +
theme(legend.title = element_text("Débourrements"), legend.position = "bottom") +
xlab("Date") +
ylab("Inflorescences C/D/E (16 jours)")
df_to_plot %>% ggplot +
aes(x = date, y = inflos, color = burst) +
theme_bw() +
geom_line(lwd = 0.75) +
facet_grid(. ~ sol) +
theme(legend.title = element_text("Débourrements"), legend.position = "bottom") +
xlab("Date") +
ylab("Inflorescences C/D/E (16 jours)") +
scale_color_discrete(labels = c("Observés", "Simulés"))
df_to_plot %>% ggplot +
aes(x = date, y = inflos, color = burst) +
theme_bw() +
geom_line(lwd = 0.75) +
facet_grid(. ~ sol) +
theme(legend.title = element_text("Débourrements"), legend.position = "bottom") +
xlab("Date") +
ylab("Inflorescences C/D/E (16 jours)") +
scale_color_discrete(labels = c("Observés", "Simulés"), name = "Débourrements")
df_to_plot %>%
filter(sol == "Enherbement ras" | sol == "Paillage synthétique") +
ggplot +
aes(x = date, y = inflos, color = burst) +
theme_bw() +
geom_line(lwd = 0.75) +
facet_grid(. ~ sol) +
theme(legend.position = "bottom") +
xlab("Date") +
ylab("Inflorescences C/D/E (16 jours)") +
scale_color_discrete(labels = c("Observés", "Simulés"), name = "Débourrements")
df_to_plot %>%
filter(sol != "Enherbement haut") +
ggplot +
aes(x = date, y = inflos, color = burst) +
theme_bw() +
geom_line(lwd = 0.75) +
facet_grid(. ~ sol) +
theme(legend.position = "bottom") +
xlab("Date") +
ylab("Inflorescences C/D/E (16 jours)") +
scale_color_discrete(labels = c("Observés", "Simulés"), name = "Débourrements")
df_to_plot %>%
filter(sol != "Enherbement haut") +
ggplot +
aes(x = date, y = inflos, color = burst) +
theme_bw() +
geom_line(lwd = 0.75) +
facet_grid(. ~ sol) +
theme(legend.position = "bottom") +
xlab("Date") +
ylab("Inflorescences C/D/E (16 jours)") +
scale_color_discrete(labels = c("Observés", "Simulés"), name = "Débourrements")
df_to_plot <- data.frame(date = rep(date2017, 6),
inflos = c(inflosCDE16j_obs_ER,
inflosCDE16j_obs_PS,
#inflosCDE16j_obs_EH,
inflosCDE16j_sim_ER,
inflosCDE16j_sim_PS),
#inflosCDE16j_sim_EH),
burst = rep(c("obs", "sim"), each = 160),
sol = factor(rep(c("Enherbement ras", "Paillage synthétique"),
each = 80, times = 2),
levels = c("Enherbement ras", "Paillage synthétique",
"Enherbement haut")))
df_to_plot <- data.frame(date = rep(date2017, 4),
inflos = c(inflosCDE16j_obs_ER,
inflosCDE16j_obs_PS,
#inflosCDE16j_obs_EH,
inflosCDE16j_sim_ER,
inflosCDE16j_sim_PS),
#inflosCDE16j_sim_EH),
burst = rep(c("obs", "sim"), each = 160),
sol = factor(rep(c("Enherbement ras", "Paillage synthétique"),
each = 80, times = 2),
levels = c("Enherbement ras", "Paillage synthétique",
"Enherbement haut")))
df_to_plot %>%
ggplot +
aes(x = date, y = inflos, color = burst) +
theme_bw() +
geom_line(lwd = 0.75) +
facet_grid(. ~ sol) +
theme(legend.position = "bottom") +
xlab("Date") +
ylab("Inflorescences C/D/E (16 jours)") +
scale_color_discrete(labels = c("Observés", "Simulés"), name = "Débourrements")
inflosCDE <- cbind(inflosCDE16j_obs_ER, inflosCDE16j_obs_PS, inflosCDE16j_sim_EH)
inflosCDEsim <- cbind(inflosCDE16j_sim_ER, inflosCDE16j_sim_PS, inflosCDE16j_sim_EH)
save(inflosCDE, inflosCDEsim, file = "inflosCDE.Rdata")
source('~/cecidomyie/drafts/calibCDE.R')
load(file = "home/bastien/data/inflosCDE.Rdata")
source('~/cecidomyie/drafts/calib_new.R')
load(file = "home/bastien/cecidomyie/data/inflosCDE.Rdata")
load(file = "/home/bastien/cecidomyie/data/inflosCDE.Rdata")
source('~/cecidomyie/drafts/calibCDE.R')
inflosCDE %>% class()
source('~/cecidomyie/drafts/calibCDE.R')
plot_decompo(arg1, inflosCDE)
plot_decompo(arg2, inflosCDE)
plot_decompo(arg3, inflosCDE)
arg2 %>% round(3)
arg1 %>% round(3)
front <- rbind(res1$value, res2$value, res3$value)
ind_pareto <- !is_dominated(t(front))
library(emoa)
ind_pareto <- !is_dominated(t(front))
ind_pareto
front[ind_pareto,]
front[ind_pareto,] %>% ndim
front[ind_pareto,] %>% nrow
pareto_front <- front[ind_pareto,]
parameters <- rbind(res1$par, res2$par, res3$par)[ind_pareto, ]
parameters
which.min(parameters[, 1])
plot_decompo(parameters[212, ], inflosCDE)
which.min(parameters[, 1])
plot_decompo(parameters[1, ], inflosCDE)
plot_decompo(parameters[2, ], inflosCDE)
plot_decompo(parameters[3, ], inflosCDE)
plot_decompo(parameters[4, ], inflosCDE)
plot_decompo(parameters[5, ], inflosCDE)
plot_decompo(parameters[6, ], inflosCDE)
plot_decompo(parameters[7, ], inflosCDE)
plot_decompo(parameters[8, ], inflosCDE)
plot_decompo(parameters[9, ], inflosCDE)
plot_decompo(parameters[10, ], inflosCDE)
plot_decompo(parameters[11, ], inflosCDE)
plot_decompo(parameters[12, ], inflosCDE)
plot_decompo(parameters[13, ], inflosCDE)
plot_decompo(parameters[14, ], inflosCDE)
plot_decompo(parameters[15, ], inflosCDE)
plot_decompo(parameters[16, ], inflosCDE)
plot_decompo(parameters[17, ], inflosCDE)
plot_decompo(parameters[18, ], inflosCDE)
plot_decompo(parameters[19, ], inflosCDE)
plot_decompo(parameters[20, ], inflosCDE)
plot_decompo(parameters[21, ], inflosCDE)
plot_decompo(parameters[22, ], inflosCDE)
plot_decompo(parameters[23, ], inflosCDE)
plot_decompo(parameters[24, ], inflosCDE)
plot_decompo(parameters[25, ], inflosCDE)
plot_decompo(parameters[26, ], inflosCDE)
plot_decompo(parameters[27, ], inflosCDE)
plot_decompo(parameters[28, ], inflosCDE)
plot_decompo(parameters[29, ], inflosCDE)
plot_decompo(parameters[30, ], inflosCDE)
plot_decompo(parameters[31, ], inflosCDE)
plot_decompo(parameters[32, ], inflosCDE)
plot_decompo(parameters[33, ], inflosCDE)
plot_decompo(parameters[34, ], inflosCDE)
plot_decompo(parameters[35, ], inflosCDE)
plot_decompo(parameters[36, ], inflosCDE)
plot_decompo(parameters[37, ], inflosCDE)
plot_decompo(parameters[38, ], inflosCDE)
plot_decompo(parameters[39, ], inflosCDE)
plot_decompo(parameters[40, ], inflosCDE)
plot_decompo(parameters[41, ], inflosCDE)
plot_decompo(parameters[42, ], inflosCDE)
plot_decompo(parameters[43, ], inflosCDE)
plot_decompo(parameters[44, ], inflosCDE)
plot_decompo(parameters[45, ], inflosCDE)
plot_decompo(parameters[46, ], inflosCDE)
plot_decompo(parameters[47, ], inflosCDE)
plot_decompo(parameters[48, ], inflosCDE)
plot_decompo(parameters[49, ], inflosCDE)
plot_decompo(parameters[50, ], inflosCDE)
plot_decompo(parameters[51, ], inflosCDE)
plot_decompo(parameters[52, ], inflosCDE)
plot_decompo(parameters[53, ], inflosCDE)
plot_decompo(parameters[54, ], inflosCDE)
plot_decompo(parameters[55, ], inflosCDE)
plot_decompo(parameters[56, ], inflosCDE)
plot_decompo(parameters[57, ], inflosCDE)
plot_decompo(parameters[58, ], inflosCDE)
plot_decompo(parameters[59, ], inflosCDE)
plot_decompo(parameters[60, ], inflosCDE)
plot_decompo(parameters[60, ], inflosCDE)
library(tidyverse)
library(magrittr)
library(mco)
library(emoa)
plot_decompo(parameters[60, ], inflosCDE)
plot_decompo(parameters[5, ], inflosCDE)
plot_decompo(parameters[2, ], inflosCDE)
parameters[2, ]
parameters[2, ] %>% round(3)
which.min(parameters[, 1])
plot_decompo(parameters[212, ], inflosCDE)
which.min(abs(pareto_front[, 1]) + abs(pareto_front[, 2]) + abs(pareto_front[, 3]))
plot_decompo(parameters[291, ], inflosCDE)
parameters[291, ]
parameters[291, ] %>% round(3)
plot_decompo(parameters[291, ], inflosCDE)
ggsave("CDEarg1.eps", device = cairo_ps)
plot_decompo(parameters[2, ], inflosCDE)
ggsave("CDEarg2.eps", device = cairo_ps)
df_to_plot %>%
ggplot +
aes(x = date, y = inflos, color = burst) +
theme_bw() +
geom_line(lwd = 0.75) +
facet_grid(. ~ sol) +
theme(legend.position = "bottom") +
xlab("Date") +
ylab("Inflorescences C/D/E (16 jours)") +
scale_color_discrete(labels = c("Observés", "Simulés"), name = "Débourrements")
arg1
arg1 %>% round(3)
plot_decompo(arg1, inflosCDE)
plot_decompo(arg2, inflosCDE)
arg2 %>% round(3)
arg1 %>% round(3)
parameters[291, ]
parameters[291, ] %>% round(3)

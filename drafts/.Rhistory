to_plot <- bind_rows(ploter, plotps, ploteh)
to_plot %>% ggplot +
aes(x = Date) +
geom_area(aes(y = prop, fill = prov), alpha = 0.5) +
geom_line(aes(y = Observation, color = "Observation"), lwd = 0.75) +
geom_line(aes(y = Estimation, color = "Estimation"), lwd = 0.75) +
geom_point(aes(y = Observation, color = "Observation")) +
geom_point(aes(y = Estimation, color = "Estimation")) +
theme_bw() +
facet_grid(. ~ Sol) +
scale_color_manual(values = c("green4", "black")) +
theme(legend.title = element_blank(), legend.position = "bottom") +
ylab("Nombre de larves s'éjectant")
# Plots -------------------------------------------------------------------
estimation <- dynamics_isa(res_isa$par[284, ], inflos_simulated)
proportion <- decomposition_isa(res_isa$par[284, ], inflos_simulated)
ploter <- data.frame(Date = date2017,
Sol = factor("Enherbement ras", levels = c("Enherbement ras",
"Paillage synthétique",
"Enherbement haut")),
method = factor("Modification", levels = c("Référence", "Modification")),
Observation = larves1,
Estimation = estimation[, 1],
Endogène = proportion[[3]][, 1],
Side = proportion[[4]][, 1],
Exogène = proportion[[2]][, 1]) %>%
gather(Exogène, Side, Endogène, key = prov, value = prop, factor_key = TRUE)
plotps <- data.frame(Date = date2017,
Sol = factor("Paillage synthétique", levels = c("Enherbement ras",
"Paillage synthétique",
"Enherbement haut")),
method = factor("Modification", levels = c("Référence", "Modification")),
Observation = larves2,
Estimation = estimation[, 2],
Endogène = proportion[[3]][, 2],
Side = proportion[[4]][, 2],
Exogène = proportion[[2]][, 2]) %>%
gather(Exogène, Side, Endogène, key = prov, value = prop, factor_key = TRUE)
ploteh <- data.frame(Date = date2017,
Sol = factor("Enherbement haut", levels = c("Enherbement ras",
"Paillage synthétique",
"Enherbement haut")),
method = factor("Modification", levels = c("Référence", "Modification")),
Observation = larves3,
Estimation = estimation[, 3],
Endogène = proportion[[3]][, 3],
Side = proportion[[4]][, 3],
Exogène = proportion[[2]][, 3]) %>%
gather(Exogène, Side, Endogène, key = prov, value = prop, factor_key = TRUE)
to_plot <- bind_rows(ploter, plotps, ploteh)
to_plot %>% ggplot +
aes(x = Date) +
geom_area(aes(y = prop, fill = prov), alpha = 0.5) +
geom_line(aes(y = Observation, color = "Observation"), lwd = 0.75) +
geom_line(aes(y = Estimation, color = "Estimation"), lwd = 0.75) +
geom_point(aes(y = Observation, color = "Observation")) +
geom_point(aes(y = Estimation, color = "Estimation")) +
theme_bw() +
facet_grid(. ~ Sol) +
scale_color_manual(values = c("green4", "black")) +
theme(legend.title = element_blank(), legend.position = "bottom") +
ylab("Nombre de larves s'éjectant")
# Plots -------------------------------------------------------------------
estimation <- dynamics_isa(res_isa$par[285, ], inflos_simulated)
proportion <- decomposition_isa(res_isa$par[285, ], inflos_simulated)
ploter <- data.frame(Date = date2017,
Sol = factor("Enherbement ras", levels = c("Enherbement ras",
"Paillage synthétique",
"Enherbement haut")),
method = factor("Modification", levels = c("Référence", "Modification")),
Observation = larves1,
Estimation = estimation[, 1],
Endogène = proportion[[3]][, 1],
Side = proportion[[4]][, 1],
Exogène = proportion[[2]][, 1]) %>%
gather(Exogène, Side, Endogène, key = prov, value = prop, factor_key = TRUE)
plotps <- data.frame(Date = date2017,
Sol = factor("Paillage synthétique", levels = c("Enherbement ras",
"Paillage synthétique",
"Enherbement haut")),
method = factor("Modification", levels = c("Référence", "Modification")),
Observation = larves2,
Estimation = estimation[, 2],
Endogène = proportion[[3]][, 2],
Side = proportion[[4]][, 2],
Exogène = proportion[[2]][, 2]) %>%
gather(Exogène, Side, Endogène, key = prov, value = prop, factor_key = TRUE)
ploteh <- data.frame(Date = date2017,
Sol = factor("Enherbement haut", levels = c("Enherbement ras",
"Paillage synthétique",
"Enherbement haut")),
method = factor("Modification", levels = c("Référence", "Modification")),
Observation = larves3,
Estimation = estimation[, 3],
Endogène = proportion[[3]][, 3],
Side = proportion[[4]][, 3],
Exogène = proportion[[2]][, 3]) %>%
gather(Exogène, Side, Endogène, key = prov, value = prop, factor_key = TRUE)
to_plot <- bind_rows(ploter, plotps, ploteh)
to_plot %>% ggplot +
aes(x = Date) +
geom_area(aes(y = prop, fill = prov), alpha = 0.5) +
geom_line(aes(y = Observation, color = "Observation"), lwd = 0.75) +
geom_line(aes(y = Estimation, color = "Estimation"), lwd = 0.75) +
geom_point(aes(y = Observation, color = "Observation")) +
geom_point(aes(y = Estimation, color = "Estimation")) +
theme_bw() +
facet_grid(. ~ Sol) +
scale_color_manual(values = c("green4", "black")) +
theme(legend.title = element_blank(), legend.position = "bottom") +
ylab("Nombre de larves s'éjectant")
res_isa$par[285,]
res_isa$par[285,] %>% round(3)
ggsave("pm_isa.eps", device = cairo_ps)
library(tidyverse)
library(magrittr)
library(lubridate)
temp <- read.csv2("../data/meteo_station_St-Paul_2017.csv")
load("../data/date2017.Rdata")
# calcul_p_pup ------------------------------------------------------------
## (Intercept)   1.9544
## Température  -0.0549
## cf. cecidomyie/skype/p_pup.pdf
indices <- which(temp$Date %>% dmy %in% date2017)
good_temp_factor <- temp$Temperature.moyenne..C.[indices]
good_temp <- as.numeric(levels(good_temp_factor))[good_temp_factor]
moving_mean <- function(x) {
## Moyenne mobile d'ordre 3
n_x <- length(x)
ans <- rep(NA, n_x)
ans[2:(n_x-1)] <- x[1:(n_x - 2)] + x[2:(n_x - 1)] + x[3:n_x]
ans[1] <- 2 * x[1] + x[2]
ans[n_x] <- x[n_x-1] + 2 * x[n_x]
ans / 3
}
p_pup <- 1.9544 - 0.0549 * moving_mean(good_temp)
p_pup
p_pup %>% plot()
p_pup %>% plot(type = "l")
good_temp
plot(date2017, p_pup)
plot(date2017, p_pup, type "l")
plot(date2017, p_pup, type ="l")
plot(date2017, good_temp, type ="l")
plot(date2017, moving_mean(good_temp), type ="l")
plot(date2017, good_temp, type ="l")
temp$Temperature.moyenne..C. %>% plot(type = "l")
plot(as.numeric(levels(good_temp_factor))[temp$Temperature.moyenne..C.])
plot(as.numeric(levels(good_temp_factor))[temp$Temperature.moyenne..C.], type ="l")
date2017
date2017 %>% day()
temp$Rayonnement.global..J.cm2.
(as.numeric(levels(temp$Temperature.maximum..C.))[temp$Temperature.maximum..C.] + as.numeric(levels(temp$Temperature.minimum..C.))[temp$Temperature.minimum..C.]) / 2
toto <- (as.numeric(levels(temp$Temperature.maximum..C.))[temp$Temperature.maximum..C.] + as.numeric(levels(temp$Temperature.minimum..C.))[temp$Temperature.minimum..C.]) / 2
lines(toto)
plot(as.numeric(levels(good_temp_factor))[temp$Temperature.moyenne..C.], type ="l")
lines(toto, col = "red")
tutu <- as.numeric(levels(temp$Temperature.maximum..C.))[temp$Temperature.maximum..C.]
lines(col = "blue")
lines(tutu, col = "blue")
titi <- as.numeric(levels(temp$Temperature.minimum..C.))[temp$Temperature.minimum..C.]
lines(titi, col ="green4")
plot(as.numeric(levels(good_temp_factor))[temp$Temperature.moyenne..C.], type ="l", ylim = c(15, 35))
lines(titi, col ="green4")
lines(tutu, col = "blue")
plot(date2017, p_pup)
plot(date2017, p_pup, type ="l")
density(c(data1, data2))
data1 <- c(8.3333333, 12.0000000, 5.3333333, 0.6666667, 0.3333333, 1.3333333, 0.3333333,
1.3333333, 1.6666667, 1.0000000, 0.3333333, 1.3333333, 0.3333333, 0.3333333)
temp1 <- c(21.45000, 21.10000, 20.77143, 20.92857, 21.48571, 20.31429, 21.18571,
21.12857, 21.45714, 21.84286, 21.41429, 22.20000, 21.81429, 22.54286)
data2 <- c(6.3333333, 10.3333333, 0.6666667, 2.3333333, 1.3333333, 2.3333333, 2.3333333,
1.0000000, 2.0000000, 0.3333333, 0.6666667, 0.3333333)
temp2 <- c(20.31667, 20.84286, 22.05714, 21.22857, 21.25714, 21.45714, 21.44286, 20.80000,
20.86667, 21.24286, 21.35000, 21.57143)
## Seuil 20.5°C
density(c(data1, data2))
density(c(data1, data2)) %>% plot(type = "l")
all_tempf <- temp$Temperature.moyenne..C.
all_temp <- as.numeric(levels(all_tempf))[all_tempf]
# packages / data ---------------------------------------------------------
library(tidyverse)
library(magrittr)
library(lubridate)
temp <- read.csv2("../data/meteo_station_St-Paul_2017.csv")
load("../data/date2017.Rdata")
all_temp
indices
# ppup temp 15j -----------------------------------------------------------
all_tempf <- temp$Temperature.moyenne..C.
all_temp <- as.numeric(levels(all_tempf))[all_tempf]
temp201715j <- rep(NA, 80)
for (i in 1:80) {
temp201715j[i] <- mean(all_temp[(indices[i] - 7):(indices[i] + 7)])
}
temp201715j
p_pup15j <- 1.95554 - 0.05497 * temp201715j
plot(p_pup15j)
plot(p_pup)
plot(p_pup15j)
plot(p_pup)
lines(p_pup15j)
abline(h = 0.77)
xtable::xtable(fit2)
source('~/cecidomyie/dataPaul_Article diapause/ppup_temp.R')
setwd("../dataPaul_Article diapause/")
source('~/cecidomyie/dataPaul_Article diapause/ppup_temp.R')
xtable::xtable(fit2)
setwd("../drafts/")
source('~/cecidomyie/drafts/p_pup_temp.R')
p_pup
p_pup15j
data.frame(jour = p_pup, quinzaine = p_pup15j, constant = 0.77)
data.frame(date = date2017, jour = p_pup, quinzaine = p_pup15j, constant = 0.77) %>%
gather(jour, quinzaine, constant, key = method, value = proba) %>%
ggplot +
aes(x = date, y = proba, color = value) +
geom_point()
data.frame(date = date2017, jour = p_pup, quinzaine = p_pup15j, constant = 0.77) %>%
gather(jour, quinzaine, constant, key = method, value = proba) %>%
ggplot +
aes(x = date, y = proba, color = proba) +
geom_point()
data.frame(date = date2017, jour = p_pup, quinzaine = p_pup15j, constant = 0.77) %>%
gather(jour, quinzaine, constant, key = method, value = proba) %>%
ggplot +
aes(x = date, y = proba, color = method) +
geom_line()
data.frame(date = date2017, jour = p_pup, quinzaine = p_pup15j, constant = 0.77) %>%
gather(jour, quinzaine, constant, key = method, value = proba) %>%
ggplot +
aes(x = date, y = proba, color = method) +
geom_line(lwd = 0.75) +
theme_bw()
data.frame(date = date2017, jour = p_pup, quinzaine = p_pup15j, constant = 0.77) %>%
gather(jour, quinzaine, constant, key = method, value = proba) %>%
ggplot +
aes(x = date, y = proba, color = method) +
geom_line(lwd = 0.75) +
ylab("Probabilité de pupaison") +
xlab("Date") +
theme(title.legend = element_blank()) +
theme_bw()
data.frame(date = date2017, jour = p_pup, quinzaine = p_pup15j, constant = 0.77) %>%
gather(jour, quinzaine, constant, key = method, value = proba) %>%
ggplot +
aes(x = date, y = proba, color = method) +
geom_line(lwd = 0.75) +
ylab("Probabilité de pupaison") +
xlab("Date") +
theme(legend.title = element_blank()) +
theme_bw()
data.frame(date = date2017, jour = p_pup, quinzaine = p_pup15j, constant = 0.77) %>%
gather(jour, quinzaine, constant, key = method, value = proba) %>%
ggplot +
aes(x = date, y = proba, color = method) +
geom_line(lwd = 0.75) +
ylab("Probabilité de pupaison") +
xlab("Date") +
theme(legend.title = element_blank()) +
theme_bw()
data.frame(date = date2017, jour = p_pup, quinzaine = p_pup15j, constant = 0.77) %>%
gather(jour, quinzaine, constant, key = method, value = proba) %>%
ggplot +
aes(x = date, y = proba, color = method) +
geom_line(lwd = 0.75) +
ylab("Probabilité de pupaison") +
xlab("Date") +
# theme(legend.title = element_blank()) +
theme_bw()
data.frame(date = date2017, jour = p_pup, quinzaine = p_pup15j, constant = 0.77) %>%
gather(jour, quinzaine, constant, key = method, value = proba) %>%
ggplot +
aes(x = date, y = proba, color = method) +
geom_line(lwd = 0.75) +
ylab("Probabilité de pupaison") +
xlab("Date") +
theme(legend.title = element_blank()) +
theme_bw()
data.frame(date = date2017, jour = p_pup, quinzaine = p_pup15j, constant = 0.77) %>%
gather(jour, quinzaine, constant, key = method, value = proba) %>%
ggplot +
aes(x = date, y = proba, color = method) +
geom_line(lwd = 0.75) +
ylab("Probabilité de pupaison") +
xlab("Date") +
theme(legend.title = element_blank()) +
theme_bw() +
scale_color_discrete(labels = c("0.77", "Température quotidienne", "Température sur la quinzaine"))
data.frame(date = date2017, jour = p_pup, quinzaine = p_pup15j, constant = 0.77) %>%
gather(jour, quinzaine, constant, key = method, value = proba) %>%
ggplot +
aes(x = date, y = proba, color = method) +
geom_line(lwd = 0.75) +
ylab("Probabilité de pupaison") +
xlab("Date") +
theme_bw() +
scale_color_discrete(labels = c("0.77", "Température quotidienne", "Température sur la quinzaine"))
data.frame(date = date2017, jour = p_pup, quinzaine = p_pup15j, constant = 0.77) %>%
gather(jour, quinzaine, constant, key = method, value = proba) %>%
ggplot +
aes(x = date, y = proba, color = method) +
geom_line(lwd = 0.75) +
ylab("Probabilité de pupaison") +
xlab("Date") +
theme_bw() +
scale_color_discrete(labels = c("0.77", "Température quotidienne", "Température sur la quinzaine")) +
theme(legend.title = element_blank())
data.frame(date = date2017, jour = p_pup, quinzaine = p_pup15j, constant = 0.77) %>%
gather(jour, quinzaine, constant, key = method, value = proba) %>%
ggplot +
aes(x = date, y = proba, color = method) +
geom_line(lwd = 0.75) +
ylab("Probabilité de pupaison") +
xlab("Date") +
theme_bw() +
scale_color_discrete(labels = c("0.77", "Température quotidienne", "Température sur la quinzaine")) +
theme(legend.title = element_blank(), legend.position = "bottom")
data.frame(date = date2017, jour = p_pup, quinzaine = p_pup15j, constant = 0.77) %>%
gather(jour, quinzaine, constant, key = method, value = proba) %>%
ggplot +
aes(x = date, y = proba, color = method) +
geom_line(lwd = 0.75) +
ylab("Probabilité de pupaison") +
xlab("Date") +
theme_bw() +
scale_color_discrete(labels = c("0.77 ", "Température quotidienne ", "Température sur la quinzaine ")) +
theme(legend.title = element_blank(), legend.position = "bottom")
source('~/cecidomyie/drafts/p_pup_temp.R')
p_pup15j
save(p_pup15j, file = "p_pup15j.Rdata")
source('~/cecidomyie/model_R/model.R')
args <- c(0.01, 0.591, 1, 1, 54.119)
cst <- dynamics2(args, inflos_attractive)
inflos_attractive
inflos_attractive %>% class()
cst <- dynamics2(args, inflos_attractive %>% as.matrix)
p1j <- dynamics21j(args, inflos_attractive %>% as.matrix)
p15j <- dynamics215j(args, inflos_attractive %>% as.matrix)
larves
source("/home/bastien/cecidomyie/model_R/model.R")
load("/home/bastien/cecidomyie/data/date2017.Rdata")
laps <- c(7, 7, 7, 8, 2, 5, 2, 4, 3, 5, 2, 5, 2, 5, 2, 4, 3, 4, 3)
true_index <- which(date2017 %in% true_date2017)
inflos_simulated <- as.matrix(read.csv("/home/bastien/cecidomyie/data/attractive_simulated.csv")[, 3:5])
data_piege <- read.csv("/home/bastien/cecidomyie/data/2017_piege.csv")
larves1 <- data_piege %>% filter(Sol == "ER") %>% pull(larves)
larves2 <- data_piege %>% filter(Sol == "PS") %>% pull(larves)
larves3 <- data_piege %>% filter(Sol == "EH") %>% pull(larves)
larves <- cbind(larves1, larves2, larves3)
larves
er
date2017
er <- data.frame(Date = date2017, obs = larves[, 1],
est1 = cst[, 1], est2 = p1j[, 1], est3 = p15j[, 1],
Sol = factor("Enherbement ras", levels = c("Enherbement ras",
"Paillage synthétique",
"Enherbement haut")))
er <- data.frame(Date = date2017, obs = larves[, 1],
est1 = cst[, 1], est2 = p1j[, 1], est3 = p15j[, 1],
Sol = factor("Enherbement ras", levels = c("Enherbement ras",
"Paillage synthétique",
"Enherbement haut")))
ps <- data.frame(Date = date2017, obs = larves[, 2],
est1 = cst[, 2], est2 = p1j[, 2], est3 = p15j[, 2],
Sol = factor("Paillage synthétique", levels = c("Enherbement ras",
"Paillage synthétique",
"Enherbement haut")))
eh <- data.frame(Date = date2017, obs = larves[, 3],
est1 = cst[, 3], est2 = p1j[, 3], est3 = p15j[, 3],
Sol = factor("Enherbement haut", levels = c("Enherbement ras",
"Paillage synthétique",
"Enherbement haut")))
er
ps
eh
er <- data.frame(Date = date2017, obs = larves[, 1],
est1 = cst[, 1], est2 = p1j[, 1], est3 = p15j[, 1],
Sol = factor("Enherbement ras", levels = c("Enherbement ras",
"Paillage synthétique",
"Enherbement haut"))) %>%
gather(est1, est2, est3, key = est, value = nombre)
ps <- data.frame(Date = date2017, obs = larves[, 2],
est1 = cst[, 2], est2 = p1j[, 2], est3 = p15j[, 2],
Sol = factor("Paillage synthétique", levels = c("Enherbement ras",
"Paillage synthétique",
"Enherbement haut"))) %>%
gather(est1, est2, est3, key = est, value = nombre)
eh <- data.frame(Date = date2017, obs = larves[, 3],
est1 = cst[, 3], est2 = p1j[, 3], est3 = p15j[, 3],
Sol = factor("Enherbement haut", levels = c("Enherbement ras",
"Paillage synthétique",
"Enherbement haut"))) %>%
gather(est1, est2, est3, key = est, value = nombre)
er
plot_pup <- bind_rows(er, ps, eh)
plot_pup %>% ggplot +
aes(x = Date) +
geom_line(aes(y = obs)) +
geom_point(aes(y = obs)) +
geom_line(aes(y = nombre, color = est)) +
geom_point(aes(y = nombre, color = est))
plot_pup %>% ggplot +
aes(x = Date) +
geom_line(aes(y = obs)) +
geom_point(aes(y = obs)) +
geom_line(aes(y = nombre, color = est)) +
geom_point(aes(y = nombre, color = est)) +
facet_grid(. ~ Sol)
plot_pup %>% ggplot +
aes(x = Date) +
geom_line(aes(y = obs)) +
geom_point(aes(y = obs)) +
geom_line(aes(y = nombre, color = est)) +
geom_point(aes(y = nombre, color = est)) +
facet_grid(Sol ~ .)
plot_pup %>% ggplot +
aes(x = Date) +
geom_line(aes(y = obs)) +
geom_point(aes(y = obs)) +
geom_line(aes(y = nombre, color = est)) +
geom_point(aes(y = nombre, color = est)) +
facet_grid(Sol ~ .) +
theme_bw() +
ylab("Nombre de larves s'éjectant")
args <- c(0.01, 0.8, 1, 1, 54.119)
cst <- dynamics2(args, inflos_attractive %>% as.matrix)
p1j <- dynamics21j(args, inflos_attractive %>% as.matrix)
p15j <- dynamics215j(args, inflos_attractive %>% as.matrix)
er <- data.frame(Date = date2017, obs = larves[, 1],
est1 = cst[, 1], est2 = p1j[, 1], est3 = p15j[, 1],
Sol = factor("Enherbement ras", levels = c("Enherbement ras",
"Paillage synthétique",
"Enherbement haut"))) %>%
gather(est1, est2, est3, key = est, value = nombre)
ps <- data.frame(Date = date2017, obs = larves[, 2],
est1 = cst[, 2], est2 = p1j[, 2], est3 = p15j[, 2],
Sol = factor("Paillage synthétique", levels = c("Enherbement ras",
"Paillage synthétique",
"Enherbement haut"))) %>%
gather(est1, est2, est3, key = est, value = nombre)
eh <- data.frame(Date = date2017, obs = larves[, 3],
est1 = cst[, 3], est2 = p1j[, 3], est3 = p15j[, 3],
Sol = factor("Enherbement haut", levels = c("Enherbement ras",
"Paillage synthétique",
"Enherbement haut"))) %>%
gather(est1, est2, est3, key = est, value = nombre)
plot_pup <- bind_rows(er, ps, eh)
plot_pup %>% ggplot +
aes(x = Date) +
geom_line(aes(y = obs)) +
geom_point(aes(y = obs)) +
geom_line(aes(y = nombre, color = est)) +
geom_point(aes(y = nombre, color = est)) +
facet_grid(Sol ~ .) +
theme_bw() +
ylab("Nombre de larves s'éjectant")
args <- c(0.02, 0.8, 1, 1, 54.119)
cst <- dynamics2(args, inflos_attractive %>% as.matrix)
p1j <- dynamics21j(args, inflos_attractive %>% as.matrix)
p15j <- dynamics215j(args, inflos_attractive %>% as.matrix)
er <- data.frame(Date = date2017, obs = larves[, 1],
est1 = cst[, 1], est2 = p1j[, 1], est3 = p15j[, 1],
Sol = factor("Enherbement ras", levels = c("Enherbement ras",
"Paillage synthétique",
"Enherbement haut"))) %>%
gather(est1, est2, est3, key = est, value = nombre)
ps <- data.frame(Date = date2017, obs = larves[, 2],
est1 = cst[, 2], est2 = p1j[, 2], est3 = p15j[, 2],
Sol = factor("Paillage synthétique", levels = c("Enherbement ras",
"Paillage synthétique",
"Enherbement haut"))) %>%
gather(est1, est2, est3, key = est, value = nombre)
eh <- data.frame(Date = date2017, obs = larves[, 3],
est1 = cst[, 3], est2 = p1j[, 3], est3 = p15j[, 3],
Sol = factor("Enherbement haut", levels = c("Enherbement ras",
"Paillage synthétique",
"Enherbement haut"))) %>%
gather(est1, est2, est3, key = est, value = nombre)
plot_pup <- bind_rows(er, ps, eh)
plot_pup %>% ggplot +
aes(x = Date) +
geom_line(aes(y = obs)) +
geom_point(aes(y = obs)) +
geom_line(aes(y = nombre, color = est)) +
geom_point(aes(y = nombre, color = est)) +
facet_grid(Sol ~ .) +
theme_bw() +
ylab("Nombre de larves s'éjectant")
plot_pup %>% ggplot +
aes(x = Date) +
geom_line(aes(y = obs)) +
geom_point(aes(y = obs)) +
geom_line(aes(y = nombre, color = est)) +
geom_point(aes(y = nombre, color = est)) +
facet_grid(Sol ~ .) +
theme_bw() +
ylab("Nombre de larves s'éjectant") +
theme(legend.title = element_blank(), legend.position = "bottom")
plot_pup %>% ggplot +
aes(x = Date) +
geom_line(aes(y = obs)) +
geom_point(aes(y = obs)) +
geom_line(aes(y = nombre, color = est)) +
geom_point(aes(y = nombre, color = est)) +
facet_grid(Sol ~ .) +
theme_bw() +
ylab("Nombre de larves s'éjectant") +
theme(legend.title = element_blank(), legend.position = "bottom") +
scale_color_discrete(labels = c("0.77\t", "Température quotidienne\t", "Température sur la quinzaine"))
ggsave("comp_dyn_pup.eps")

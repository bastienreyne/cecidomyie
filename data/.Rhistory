geom_line(lwd = 0.75) +
theme(legend.title = element_blank(), legend.text = element_text(size = 14)) +
scale_color_discrete(labels = c(expression(I[t]^{o}),
expression(I[t]^{sd2}))) +
ggtitle("Enherbement haut")
sdmin_PS
sdmin_EH
sdmin_EH <- cbind(Date = date2017, ITO = ITO_EH, ITsdMIN = ITSDMIN_EH) %>%
as_tibble() %>%
mutate_at("Date", as_date) %>%
gather(ITO, ITsdMIN, key = type, value = Nombre) %>%
ggplot(aes(x = Date, y = Nombre, color = type)) +
geom_line(lwd = 0.75) +
theme(legend.title = element_blank(), legend.text = element_text(size = 14)) +
scale_color_discrete(labels = c(expression(I[t]^{o}),
expression(I[t]^{sd2}))) +
ggtitle("Enherbement haut")
sdmin_EH
sdmin_PS <- cbind(Date = date2017, ITO = ITO_PS, ITS = ITS_PS, ITsdMIN = ITSDMIN_PS) %>%
as_tibble() %>%
mutate_at("Date", as_date) %>%
gather(ITO, ITS, ITsdMIN, key = type, value = Nombre) %>%
ggplot(aes(x = Date, y = Nombre, color = type)) +
geom_line(lwd = 0.75) +
theme(legend.title = element_blank(), legend.text = element_text(size = 14)) +
scale_color_discrete(labels = c(expression(I[t]^{o}),
expression(I[t]^{s}),
expression(I[t]^{sd2}))) +
ggtitle("Paillage synthétique")
ITS_PS <- c(231.35134498309577, 263.1403688655092, 281.0800960198721, 307.3550858962769, 333.8713951105077, 359.51008545564, 380.5368210821799, 388.094867855072, 396.1460527903767, 394.68464275298504, 392.62953161880716, 385.0922916756056, 376.5531212571355, 367.50688501328494, 433.38339546466193, 500.2432793742436, 501.32122515075446, 509.48530024272935, 517.3650338211885, 511.8309956018444, 553.8854076004991, 542.2216626342899, 524.9826680312833, 507.68765823559943, 489.93790924408546, 471.7948309901738, 453.32383344110843, 434.59360174806193, 433.06602367582803, 423.48046322953405, 403.5271253006669, 403.5568132828252, 422.8800004934174, 441.3939865851313, 440.26913203356935, 419.18298217672236, 399.5312446103295, 380.14260782772146, 361.06562323141105, 342.3450735672743, 324.0218118970413, 306.13266824597576, 296.33363836382966, 398.9831091934374, 496.93306667150154, 588.0312393390607, 678.5162841997064, 768.6416802476723, 857.9851284293845, 946.2431940868729, 1449.55420136603, 1945.0486816216364, 2018.8163176138914, 2106.8823191280903, 2193.8939381538057, 2277.6345788438794, 2298.019594861713, 2245.4163045599694, 2194.596996342121, 2193.357686234684, 2189.1113511667227, 2127.0149061632474, 2065.635943684048, 2001.8889322201096, 1934.2034032880247, 1864.5945719928336, 1794.8615751405036, 1829.8772450612541, 1898.954841403428, 1814.376904047019, 1736.2920072824763, 1658.7423902883631, 1580.8827105852251, 1502.8311718603177, 1424.9188905122505, 1347.474457829018, 1270.819607155645, 1195.265054093004, 1120.7109618043576, 1048.0470329024579)
ITS_EH <- c(180.25526992154695, 226.4936275997441, 256.66951056608457, 293.2634586959849, 330.0396262314193, 365.12321200496183, 374.433656679466, 416.97835716739144, 459.6959968921106, 473.0972476155717, 485.9042829918171, 496.84011869645235, 505.6590188231606, 512.8829067193249, 558.2077546858116, 603.4741996430043, 604.5594870572113, 603.8526373979525, 599.5476798616211, 592.3223415475319, 630.8815125349779, 678.7193994349517, 728.1799578069918, 763.1830851682863, 799.7590442159218, 837.4911767493007, 876.6351202998754, 919.1394457834041, 941.4672025076551, 909.6860124129805, 880.3973178798249, 850.5403229059973, 820.1954388153314, 803.1896859434028, 789.9935585099867, 765.5134465066195, 733.2058812766459, 701.2890213827512, 941.3810485157152, 1182.4524926774893, 1421.775190005026, 1660.2154131041113, 1939.3667887360593, 2215.347036250657, 2489.348078241272, 2603.9786977149306, 2722.892120211843, 2840.577246759011, 2956.5032268510577, 3070.7174513355603, 3628.605053144818, 4174.808342707892, 4400.4187840829445, 4634.884382408245, 4866.739684723611, 5088.437979096438, 4958.352498519027, 4830.85015079838, 4699.044500144398, 4563.165518060335, 4422.7349120748295, 4278.042850458827, 4129.447299705896, 3977.3418146112267, 3821.279603986258, 3662.7136870573354, 3503.2316696816642, 3342.3450009482726, 3180.6426653623826, 3018.731304145314, 2856.139762825413, 2694.4412531861694, 2534.5183899027766, 2377.3635312734773, 2223.1706306788956, 2072.496663367626, 1925.8679831206305, 1783.7308449202947, 1647.0671918196267, 1516.9953563141808)
sdmin_ER <- cbind(Date = date2017, ITO = ITO_ER, ITS = ITS_ER, ITsdMIN = ITSDMIN_ER) %>%
as_tibble() %>%
mutate_at("Date", as_date) %>%
gather(ITO, ITS, ITsdMIN, key = type, value = Nombre) %>%
ggplot(aes(x = Date, y = Nombre, color = type)) +
geom_line(lwd = 0.75) +
theme(legend.title = element_blank(), legend.text = element_text(size = 14)) +
scale_color_discrete(labels = c(expression(I[t]^{o}),
expression(I[t]^{s}),
expression(I[t]^{sd2}))) +
ggtitle("Enherbement ras")
sdmin_PS <- cbind(Date = date2017, ITO = ITO_PS, ITS = ITS_PS, ITsdMIN = ITSDMIN_PS) %>%
as_tibble() %>%
mutate_at("Date", as_date) %>%
gather(ITO, ITS, ITsdMIN, key = type, value = Nombre) %>%
ggplot(aes(x = Date, y = Nombre, color = type)) +
geom_line(lwd = 0.75) +
theme(legend.title = element_blank(), legend.text = element_text(size = 14)) +
scale_color_discrete(labels = c(expression(I[t]^{o}),
expression(I[t]^{s}),
expression(I[t]^{sd2}))) +
ggtitle("Paillage synthétique")
sdmin_EH <- cbind(Date = date2017, ITO = ITO_EH, ITS = ITS_EH, ITsdMIN = ITSDMIN_EH) %>%
as_tibble() %>%
mutate_at("Date", as_date) %>%
gather(ITO, ITS, ITsdMIN, key = type, value = Nombre) %>%
ggplot(aes(x = Date, y = Nombre, color = type)) +
geom_line(lwd = 0.75) +
theme(legend.title = element_blank(), legend.text = element_text(size = 14)) +
scale_color_discrete(labels = c(expression(I[t]^{o}),
expression(I[t]^{s}),
expression(I[t]^{sd2}))) +
ggtitle("Enherbement haut")
sdmin_EH
sdmin_ER
sdmin_PS
sdmin_ER
source('~/cecidomyie/drafts/plots_simu_sdmin.R')
sdmin_ER
sdmin_PS
sdmin_EH
sum(ITS_ER)
sum(ITSDMIN_ER)
plot(ecdf(rnorm(1000, mean = 22, sd = 14)))
lines(ecdf(rnorm(1000, mean = 22, sd = 1)), col = "red")
IT_ER <- c(350.,      450.1,     550.2,     650.3  ,   750.4    , 850.5 ,    950.6,
969.5    , 988.4 ,   1007.3  ,  1026.2  ,  1045.1 ,    1064. ,    1082.9,
1174.6  ,  1266.3 ,    1358. ,    1449.7 ,   1541.4 ,   1633.1 ,   1724.8,
1827.0875, 1929.375,  2031.6625, 2133.95 ,  2236.2375 ,2338.525  ,2440.8125,
2543.1,    2582.3,    2621.5 ,   2467.64 ,  2313.78 ,  2159.92 ,  2006.06,
1852.2,    1766.45 ,  1680.7 ,   1732.15 ,  1783.6  ,  1835.05 ,  1886.5,
1724.8,    1563.1,    1401.4  ,  1345.54 ,  1289.68  , 1233.82 ,  1177.96,
1122.1,    1168.65 ,  1215.2  ,  1278.9  ,  1342.6   , 1406.3,    1470.,
1533.7 ,   1555.75 ,  1577.8 ,   1563.1  ,  1548.4   , 1533.7    ,1519.,
1504.3 ,   1207.85 ,   911.4 ,   1027.775,  1144.15  , 1260.525,  1376.9,
1259.3,    1141.7,    1024.1 ,    959.175,   894.25 ,   829.325,   764.4,
592.9,     421.4,     249.9)
sdmin_ER <- cbind(Date = date2017, IT = IT_ER, ITO = ITO_ER, ITS = ITS_ER, ITsdMIN = ITSDMIN_ER) %>%
as_tibble() %>%
mutate_at("Date", as_date) %>%
gather(IT, ITO, ITS, ITsdMIN, key = type, value = Nombre) %>%
ggplot(aes(x = Date, y = Nombre, color = type)) +
geom_line(lwd = 0.75) +
theme(legend.title = element_blank(), legend.text = element_text(size = 14)) +
scale_color_discrete(labels = c(expression(I[t]^{2}),
expression(I[t]^{o}),
expression(I[t]^{s}),
expression(I[t]^{sd2}))) +
ggtitle("Enherbement ras")
sdmin_ER
IT_PS <- c(231.42857143,  260.35714286,  289.28571429,  318.21428571,
347.14285714,  376.07142857,  405.        ,  411.42857143,
417.85714286,  424.28571429,  430.71428571,  437.14285714,
443.57142857,  450.        ,  482.14285714,  514.28571429,
546.42857143,  578.57142857,  610.71428571,  642.85714286,
675.        ,  658.125     ,  641.25      ,  624.375     ,
607.5       ,  590.625     ,  573.75      ,  556.875     ,
540.        ,  528.75      ,  517.5       ,  538.2       ,
558.9       ,  579.6       ,  600.3       ,  621.        ,
596.25      ,  571.5       ,  508.5       ,  445.5       ,
382.5       ,  319.5       ,  418.5       ,  517.5       ,
616.5       ,  709.2       ,  801.9       ,  894.6       ,
987.3       , 1080.        , 1588.5       , 2097.        ,
2199.6       , 2302.2       , 2404.8       , 2507.4       ,
2610.        , 2511.        , 2412.        , 2494.8       ,
2577.6       , 2660.4       , 2743.2       , 2826.        ,
2223.        , 1620.        , 1948.5       , 2277.        ,
2605.5       , 2934.        , 2586.        , 2238.        ,
1890.        , 1909.125     , 1928.25      , 1947.375     ,
1966.5       , 1611.        , 1255.5       ,  900. )
IT_EH <- c(180.37142857,  219.14285714,  257.91428571,  296.68571429,
335.45714286,  374.22857143,  413.        ,  438.28571429,
463.57142857,  488.85714286,  514.14285714,  539.42857143,
564.71428571,  590.        ,  619.5       ,  649.        ,
678.5       ,  708.        ,  737.5       ,  767.        ,
796.5       ,  834.85      ,  873.2       ,  911.55      ,
949.9       ,  988.25      , 1026.6       , 1064.95      ,
1103.3       , 1073.8       , 1044.3       , 1033.68      ,
1023.06      , 1012.44      , 1001.82      ,  991.2       ,
946.95      ,  902.7       , 1153.45      , 1404.2       ,
1654.95      , 1905.7       , 2198.73333333, 2491.76666667,
2784.8       , 2920.5       , 3056.2       , 3191.9       ,
3327.6       , 3463.3       , 4044.45      , 4625.6       ,
4900.54      , 5175.48      , 5450.42      , 5725.36      ,
6000.3       , 5610.9       , 5221.5       , 5245.1       ,
5268.7       , 5292.3       , 5315.9       , 5339.5       ,
4885.2       , 4430.9       , 4588.725     , 4746.55      ,
4904.375     , 5062.2       , 4562.66666667, 4063.13333333,
3563.6       , 3290.725     , 3017.85      , 2744.975     ,
2472.1       , 2170.315     , 1868.53      , 1566.745)
sdmin_ER <- cbind(Date = date2017, IT = IT_ER, ITO = ITO_ER, ITS = ITS_ER, ITsdMIN = ITSDMIN_ER) %>%
as_tibble() %>%
mutate_at("Date", as_date) %>%
gather(IT, ITO, ITS, ITsdMIN, key = type, value = Nombre) %>%
ggplot(aes(x = Date, y = Nombre, color = type)) +
geom_line(lwd = 0.75) +
theme(legend.title = element_blank(), legend.text = element_text(size = 14)) +
scale_color_discrete(labels = c(expression(I[t]^{2}),
expression(I[t]^{o}),
expression(I[t]^{s}),
expression(I[t]^{sd2}))) +
ggtitle("Enherbement ras")
sdmin_PS <- cbind(Date = date2017, IT = IT_PS, ITO = ITO_PS, ITS = ITS_PS, ITsdMIN = ITSDMIN_PS) %>%
as_tibble() %>%
mutate_at("Date", as_date) %>%
gather(IT, ITO, ITS, ITsdMIN, key = type, value = Nombre) %>%
ggplot(aes(x = Date, y = Nombre, color = type)) +
geom_line(lwd = 0.75) +
theme(legend.title = element_blank(), legend.text = element_text(size = 14)) +
scale_color_discrete(labels = c(expression(I[t]^{2}),
expression(I[t]^{o}),
expression(I[t]^{s}),
expression(I[t]^{sd2}))) +
ggtitle("Paillage synthétique")
sdmin_EH <- cbind(Date = date2017, IT = IT_EH, ITO = ITO_EH, ITS = ITS_EH, ITsdMIN = ITSDMIN_EH) %>%
as_tibble() %>%
mutate_at("Date", as_date) %>%
gather(IT, ITO, ITS, ITsdMIN, key = type, value = Nombre) %>%
ggplot(aes(x = Date, y = Nombre, color = type)) +
geom_line(lwd = 0.75) +
theme(legend.title = element_blank(), legend.text = element_text(size = 14)) +
scale_color_discrete(labels = c(expression(I[t]^{2}),
expression(I[t]^{o}),
expression(I[t]^{s}),
expression(I[t]^{sd2}))) +
ggtitle("Enherbement haut")
sdmin_ER
sdmin_PS
sdmin_EH
sdmin_ER
sdmin_PS
sdmin_EH
data <- read.csv("2017_piege.csv")
data
data <- read_csv("2017_piege.csv")
data
inflos_ER <- data %>% filter(Sol == "ER")
inflos_EH
inflos_ER
inflos_ER <- data %>% filter(Sol == "ER") %>% pull(inflos)
inflos_ER
library(survival)
??`survival
``
qscq
dsv ZE''
)
()
}
}`
??survival
?survfit
floraison
floraison <- read_csv("2017_floraison_not_corrected.csv")
floraison
floraison2017
write.csv(floraison2017, file = "2017_floraison_dates.csv")
floraison <- read_csv("2017_floraison_dates.csv")
floraison
floraison <- read_csv("2017_floraison_dates.csv") %>%
mutate(lifespan = death - birth)
floraison
floraison <- read_csv("2017_floraison_dates.csv") %>%
mutate(lifespan = as.numeric(death - birth))
floraison_ER <- floraison %>% filter(Traitm == "ER") %>% pull(lifespan)
floraison_PS <- floraison %>% filter(Traitm == "PS") %>% pull(lifespan)
floraison_EH <- floraison %>% filter(Traitm == "EH") %>% pull(lifespan)
floraison_ER
floraison_EH
floraison_PS
inflos_apic <- inflos_floraison %>% filter(!is.na(ApdateC)) %>%
select(Traitm, ApdateC, ApdateM) %>%
rename(birth = ApdateC, death = ApdateM)
inflos_lat1 <- inflos_floraison %>% filter(!is.na(Lat1dateC)) %>%
select(Traitm, Lat1dateC, Lat1dateM) %>%
rename(birth = Lat1dateC, death = Lat1dateM)
inflos_lat2 <- inflos_floraison %>% filter(!is.na(Lat2dateC)) %>%
select(Traitm, Lat2dateC, Lat2dateM) %>%
rename(birth = Lat2dateC, death = Lat2dateM)
inflos_lat3 <- inflos_floraison %>% filter(!is.na(Lat3dateC)) %>%
select(Traitm, Lat3dateC, Lat3dateM) %>%
rename(birth = Lat3dateC, death = Lat3dateM)
inflos_lat4 <- inflos_floraison %>% filter(!is.na(Lat4dateC)) %>%
select(Traitm, Lat4dateC, Lat4dateM) %>%
rename(birth = Lat4dateC, death = Lat4dateM)
inflos_lat5 <- inflos_floraison %>% filter(!is.na(Lat5dateC)) %>%
select(Traitm, Lat5dateC, Lat5dateM) %>%
rename(birth = Lat5dateC, death = Lat5dateM)
floraison2017 <- rbind(inflos_apic, inflos_lat1, inflos_lat2,
inflos_lat3, inflos_lat4, inflos_lat5) %>%
arrange(birth)
floraison2017$birth <- floraison2017$birth - 365
floraison2017$death <- floraison2017$death - 365
isna <- floraison2017$death %>% is.na %>% which
write.csv(floraison2017, file = "2017_floraison_dates.csv")
floraison <- read_csv("2017_floraison_dates.csv") %>%
mutate(lifespan = as.numeric(death - birth))
floraison_ER <- floraison %>% filter(Traitm == "ER") %>% pull(lifespan)
floraison_PS <- floraison %>% filter(Traitm == "PS") %>% pull(lifespan)
floraison_EH <- floraison %>% filter(Traitm == "EH") %>% pull(lifespan)
floraison_ER
floraison_PS
floraison_EH
floraison_PS %>% na.omit
floraison_ER %>% na.omit
floraison_EH %>% na.omit
inflos_ER <- data %>% filter(Sol == "ER") %>% pull(inflos)
inflos_PS <- data %>% filter(Sol == "PS") %>% pull(inflos)
inflos_EH <- data %>% filter(Sol == "EH") %>% pull(inflos)
floraison <- read_csv("2017_floraison_dates.csv") %>%
mutate(lifespan = as.numeric(death - birth))
floraison_ER <- floraison %>% filter(Traitm == "ER") %>% pull(lifespan) %>% na.omit
floraison_PS <- floraison %>% filter(Traitm == "PS") %>% pull(lifespan) %>% na.omit
floraison_EH <- floraison %>% filter(Traitm == "EH") %>% pull(lifespan) %>% na.omit
floraison_ER
floraison_ER * 2
ecdf(floraison_ER)
plot(ecdf(floraison_ER))
plot(ecdf(floraison_PS))
plot(ecdf(floraison_EH))
ecdf(floraison_ER)(50)
ecdf(floraison_ER)(60)
ecdf(floraison_ER)(78)
ecdf(floraison_ER)(70)
ecdf(floraison_ER)(68)
ecdf(floraison_ER)(67)
ecdf(floraison_ER)(66)
ecdf(floraison_ER)(65)
ecdf(floraison_ER)(64)
ecdf(floraison_ER)(63)
ecdf(floraison_ER) %>% mean
floraison_ER %>% mean()
floraison_ER %>% sd()
floraison_PS %>% sd()
floraison_EH %>% sd()
floraison_PS %>% mean()
floraison_EH %>% mean()
lines(ecdf(rnorm(1000, mean = 36.253, sd = 15.01)))
pnorm(0.5)
pnorm(0)
pnorm(0, mean = 36, sd = 15)
pnorm(20, mean = 36, sd = 15)
pnorm(60, mean = 36, sd = 15)
pnorm(63, mean = 36, sd = 15)
mean_ER <- floraison_ER %>% mean
mean_ER
50:1
1:1
(1-pnorm(50, mean_ER, sd_ER))
sd_ER <- floraison_ER %>% sd
sd_ER <- floraison_ER %>% sd
(1-pnorm(50, mean_ER, sd_ER))
(1-pnorm(1:50, mean_ER, sd_ER))
pnorm(1:50, mean_ER, sd_ER)
estimation_inflos <- function(bursts, sousbloc) {
if (sousbloc == "ER") {
mean_hat <- mean_ER
sd_hat <- sd_ER
}
if (sousbloc == "PS") {
mean_hat <- mean_PS
sd_hat <- sd_PS
}
if (sousbloc == "EH") {
mean_hat <- mean_EH
sd_hat <- sd_EH
}
inflos <- bursts
FdR <- 1 - pnorm(1:50, mean_hat, sd_hat)
for (t in 2:length(inflos)) {
inflos[t] <- inflos[t] + bursts[1:(t-1)] * (1 - FdR[1:(t-1)])
}
}
estimation_inflos <- function(bursts, sousbloc) {
if (sousbloc == "ER") {
mean_hat <- mean_ER
sd_hat <- sd_ER
}
if (sousbloc == "PS") {
mean_hat <- mean_PS
sd_hat <- sd_PS
}
if (sousbloc == "EH") {
mean_hat <- mean_EH
sd_hat <- sd_EH
}
inflos <- bursts
FdR <- 1 - pnorm(1:50, mean_hat, sd_hat)
for (t in 2:length(inflos)) {
inflos[t] <- inflos[t] + sum(bursts[1:(t-1)] * (1 - FdR[1:(t-1)]))
}
}
paste("inflos_", "ER")
str_c("inflos_", "ER")
?str_c
str_flatten("inflos_", "ER")
?str_extract("inflos")
str_extract("inflos")
paste("inflos_", "ER")
paste0("inflos_", "ER")
noquote(paste0("inflos_", "ER"))
noquote(paste0("inflos_", "ER"))
as.name(paste0("inflos_", "ER"))
as.name(paste0("inflos_", "ER"))
?dput
inflos <- data.frame(inflos_ER, inflos_PS, inflos_EH)
inflos
inflos %>% select(ends_with("ER"))
inflos %>% select(ends_with("ER")) %>% pull
moyenne <- data.frame(mean_ER, mean_PS, mean_EH)
mean_PS <- floraison_PS %>% mean
sd_PS <- floraison_PS %>% sd
mean_EH <- floraison_EH %>% mean
sd_EH <- floraison_EH %>% sd
moyenne <- data.frame(mean_ER, mean_PS, mean_EH)
moyenne
moyenne %>% select(end_with("ER"))
moyenne %>% select(ends_with("ER"))
moyenne %>% select(ends_with("ER")) %>% pull
res_ER <- nsga2(objectif, idim = 80, odim = 80, "ER")
objectif <- function(x, sousbloc) {
to_closen <- inflos %>% select(ends_with(sousbloc)) %>% pull
simulated <- estimation_inflos(x, sousbloc)
n_obs <- to_closen %>% length
sum(abs(simulated - to_closen)) / n_obs
}
res_ER <- nsga2(objectif, idim = 80, odim = 80, "ER",
lower.bounds = rep(0, 80), upper.bounds = rep(6000, 80))
res_ER <- nsga2(objectif, idim = 80, odim = 80, "ER",
lower.bounds = rep(0, 80), upper.bounds = rep(6000, 80))
?nsga2
res_ER <- nsga2(objectif, idim = 80, odim = 80, "ER",
lower.bounds = rep(0, 80), upper.bounds = rep(6000, 80),
vectorized = FALSE)
res_ER <- nsga2(objectif, idim = 80, odim = 80, "ER")
res_ER <- nsga2(objectif, idim = 80, odim = 80, c("ER"),
lower.bounds = rep(10, 80), upper.bounds = rep(6000, 80))
estimation_inflos <- function(bursts, sousbloc) {
mean_hat <- moyenne %>% select(ends_with(sousbloc)) %>% pull
sd_hat <- stddev %>% select(ends_with(sousbloc)) %>% pull
browser()
inflos <- bursts
FdR <- 1 - pnorm(1:50, mean_hat, sd_hat)
for (t in 2:length(inflos)) {
inflos[t] <- inflos[t] + sum(bursts[1:(t-1)] * (1 - FdR[1:(t-1)]))
}
inflos
}
res_ER <- nsga2(objectif, idim = 80, odim = 80, "ER",
lower.bounds = rep(10, 80), upper.bounds = rep(6000, 80))
stddev <- data.frame(sd_ER, sd_PS, sd_EH)
estimation_inflos <- function(bursts, sousbloc) {
mean_hat <- moyenne %>% select(ends_with(sousbloc)) %>% pull
sd_hat <- stddev %>% select(ends_with(sousbloc)) %>% pull
browser()
inflos <- bursts
FdR <- 1 - pnorm(1:50, mean_hat, sd_hat)
for (t in 2:length(inflos)) {
inflos[t] <- inflos[t] + sum(bursts[1:(t-1)] * (1 - FdR[1:(t-1)]))
}
inflos
}
estimation_inflos <- function(bursts, sousbloc) {
mean_hat <- moyenne %>% select(ends_with(sousbloc)) %>% pull
sd_hat <- stddev %>% select(ends_with(sousbloc)) %>% pull
# browser()
inflos <- bursts
FdR <- 1 - pnorm(1:50, mean_hat, sd_hat)
for (t in 2:length(inflos)) {
inflos[t] <- inflos[t] + sum(bursts[1:(t-1)] * (1 - FdR[1:(t-1)]))
}
inflos
}
res_ER <- nsga2(objectif, idim = 80, odim = 80, "ER",
lower.bounds = rep(10, 80), upper.bounds = rep(6000, 80))
estimation_inflos <- function(bursts, sousbloc) {
mean_hat <- moyenne %>% select(ends_with(sousbloc)) %>% pull
sd_hat <- stddev %>% select(ends_with(sousbloc)) %>% pull
browser()
inflos <- bursts
FdR <- 1 - pnorm(1:50, mean_hat, sd_hat)
for (t in 2:length(inflos)) {
inflos[t] <- inflos[t] + sum(bursts[1:(t-1)] * (1 - FdR[1:(t-1)]))
}
inflos
}
res_ER <- nsga2(objectif, idim = 80, odim = 80, "ER",
lower.bounds = rep(10, 80), upper.bounds = rep(6000, 80))
mean_hat
sd_hat
estimation_inflos <- function(bursts, sousbloc) {
mean_hat <- moyenne %>% select(ends_with(sousbloc)) %>% pull
sd_hat <- stddev %>% select(ends_with(sousbloc)) %>% pull
browser()
inflos <- bursts
FdR <- 1 - pnorm(1:50, mean_hat, sd_hat)
for (t in 2:length(inflos)) {
inflos[t] <- inflos[t] + sum(bursts[1:(t-1)] * (1 - FdR[1:(t-1)]))
}
inflos
}
res_ER <- nsga2(objectif, idim = 80, odim = 80, "ER",
lower.bounds = rep(10, 80), upper.bounds = rep(6000, 80))
inflos
inflos
estimation_inflos <- function(bursts, sousbloc) {
mean_hat <- moyenne %>% select(ends_with(sousbloc)) %>% pull
sd_hat <- stddev %>% select(ends_with(sousbloc)) %>% pull
# browser()
inflo <- bursts
FdR <- 1 - pnorm(1:50, mean_hat, sd_hat)
for (t in 2:length(inflos)) {
inflo[t] <- inflo[t] + sum(bursts[1:(t-1)] * (1 - FdR[1:(t-1)]))
}
inflo
}
objectif <- function(x, sousbloc) {
to_closen <- inflos %>% select(ends_with(sousbloc)) %>% pull
simulated <- estimation_inflos(x, sousbloc)
n_obs <- to_closen %>% length
sum(abs(simulated - to_closen)) / n_obs
}
res_ER <- nsga2(objectif, idim = 80, odim = 80, "ER",
lower.bounds = rep(10, 80), upper.bounds = rep(6000, 80))
objectif <- function(x, sousbloc) {
browser()
to_closen <- inflos %>% select(ends_with(sousbloc)) %>% pull
simulated <- estimation_inflos(x, sousbloc)
n_obs <- to_closen %>% length
sum(abs(simulated - to_closen)) / n_obs
}
res_ER <- nsga2(objectif, idim = 80, odim = 80, "ER",
lower.bounds = rep(10, 80), upper.bounds = rep(6000, 80))
to_closen
simulated
n_obs
n_obs
res_ER <- nsga2(objectif, idim = 80, odim = 80, "ER",
lower.bounds = rep(10, 80), upper.bounds = rep(6000, 80))
objectif <- function(x, sousbloc) {
# browser()
to_closen <- inflos %>% select(ends_with(sousbloc)) %>% pull
simulated <- estimation_inflos(x, sousbloc)
n_obs <- to_closen %>% length
sum(abs(simulated - to_closen)) / n_obs
}
res_ER <- nsga2(objectif, idim = 80, odim = 80, "ER",
lower.bounds = rep(10, 80), upper.bounds = rep(6000, 80))
res_ER <- nsga2(objectif, idim = 80, odim = 80, "ER",
lower.bounds = rep(10, 80), upper.bounds = rep(6000, 80),
generations = 8)
?optim
res_ER <- nsga2(objectif, idim = 80, odim = 80, "ER",
lower.bounds = rep(10, 80), upper.bounds = rep(6000, 80),
generations = 8)
res_ER <- nsga2(objectif, idim = 80, odim = 1, "ER",
lower.bounds = rep(10, 80), upper.bounds = rep(6000, 80))
res_PS <- nsga2(objectif, idim = 80, odim = 1, "PS",
lower.bounds = rep(10, 80), upper.bounds = rep(6000, 80))
res_ER <- nsga2(objectif, idim = 80, odim = 1, "EH",
lower.bounds = rep(10, 80), upper.bounds = rep(6000, 80))

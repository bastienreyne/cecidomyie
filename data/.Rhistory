mmb1.r <- values_b1.r %>% mutate(larves = moving.mean(larves), inflos_vivantes  = moving.mean(inflos_vivantes), inflos_mortes = moving.mean(inflos_mortes)) %>% mutate(Bloc = factor("Bloc 1"))
mmb2.b <- values_b2.b %>% mutate(larves = moving.mean(larves), inflos_vivantes  = moving.mean(inflos_vivantes), inflos_mortes = moving.mean(inflos_mortes)) %>% mutate(Bloc = factor("Bloc 2"))
mmb2.h <- values_b2.h %>% mutate(larves = moving.mean(larves), inflos_vivantes  = moving.mean(inflos_vivantes), inflos_mortes = moving.mean(inflos_mortes)) %>% mutate(Bloc = factor("Bloc 2"))
mmb2.r <- values_b2.r %>% mutate(larves = moving.mean(larves), inflos_vivantes  = moving.mean(inflos_vivantes), inflos_mortes = moving.mean(inflos_mortes)) %>% mutate(Bloc = factor("Bloc 2"))
mm <- rbind(mmb1.b, mmb1.h, mmb1.r, mmb2.b, mmb2.h, mmb2.r) %>% mutate_at("date", as_date)
ggplot(mm %>% gather(`larves`, `inflos_vivantes`, key = "larves/inflos", value = "Nombre"), aes(x=date, y = Nombre, color = key)) + geom_line(lwd = 1) + facet_grid(Sol ~ Bloc) + theme_bw() + scale_color_viridis_d()+geom_rug(aes(x=date), color = rugs)+theme(legend.position='none')
?gather
ggplot(mm %>% gather(`larves`, `inflos_vivantes`, key = "toto", value = "Nombre"), aes(x=date, y = Nombre, color = key)) + geom_line(lwd = 1) + facet_grid(Sol ~ Bloc) + theme_bw() + scale_color_viridis_d()+geom_rug(aes(x=date), color = rugs)+theme(legend.position='none')
mm %>% gather(`larves`, `inflos_vivantes`, key = "toto", value = "Nombre")
m <- mm %>% gather(`larves`, `inflos_vivantes`, key = "toto", value = "Nombre")
ggplot(m, aes(x=date, y = Nombre, color = key)) + geom_line(lwd = 1) + facet_grid(Sol ~ Bloc) + theme_bw() + scale_color_viridis_d()+geom_rug(aes(x=date), color = rugs)+theme(legend.position='none')
m
ggplot(m, aes(x=date, y = Nombre, color = toto)) + geom_line(lwd = 1) + facet_grid(Sol ~ Bloc) + theme_bw() + scale_color_viridis_d()+geom_rug(aes(x=date), color = rugs)+theme(legend.position='none')
972/6
rugs2 <- rep(NA, 162)
rugs2[which(d$date %in% b1.b$date)] <- "black"
ggplot(m, aes(x=date, y = Nombre, color = toto)) + geom_line(lwd = 1) + facet_grid(Sol ~ Bloc) + theme_bw() + scale_color_viridis_d()+geom_rug(aes(x=date), color = rugs2)+theme(legend.position='none')
ggplot(m, aes(x=date, y = Nombre, color = toto)) + geom_line(lwd = 1) + facet_grid(Sol ~ Bloc) + theme_bw() + scale_color_viridis_d()#+geom_rug(aes(x=date), color = rugs2)+theme(legend.position='none')
81*6
81*12
rugs2 <- rep(NA, 972)
rugs2[which(d$date %in% b1.b$date)] <- "black"
ggplot(m, aes(x=date, y = Nombre, color = toto)) + geom_line(lwd = 1) + facet_grid(Sol ~ Bloc) + theme_bw() + scale_color_viridis_d()+geom_rug(aes(x=date), color = rugs2)+theme(legend.position='none')
ggplot(m, aes(x=date, y = Nombre, color = toto)) + geom_line(lwd = 1) + facet_grid(Sol ~ Bloc) + theme_bw() + scale_color_viridis_d()+geom_rug(aes(x=date), color = rugs2, sides="b")+theme(legend.position='none')
ggplot(m, aes(x=date, y = Nombre, color = toto)) + geom_line(lwd = 1) + facet_grid(Sol ~ Bloc) + theme_bw() + scale_color_viridis_d()+geom_rug(aes(x=date), color = rugs2, sides="b")+theme(legend.title = element_blank())
ggplot(d, aes(color = Sol)) + geom_line(aes(x=date, y=inflos_vivantes), lwd = 1) + geom_point(aes(x = date, y=larves)) + geom_segment(aes(x=date, xend=date, y=0, yend=larves)) + facet_grid(Sol ~ Bloc) + theme_bw() + scale_color_viridis_d()+geom_rug(aes(x=date), color = rugs)+theme(legend.position='none')
ggplot(d, aes(color = Sol)) + geom_line(aes(x=date, y=inflos_vivantes), lwd = 1) + geom_point(aes(x = date, y=larves)) + geom_segment(aes(x=date, xend=date, y=0, yend=larves)) + facet_grid(Sol ~ Bloc) + theme_bw() + scale_color_viridis_d()+geom_rug(aes(x=date), color = rugs)+theme(legend.position='none') + ylab("Nombre d'inflorescences et de larves à l'échelle du sous-bloc") + xlab("Date")
ggsave(filename = "comaraison")
ggsave("comaraison")
ggsave("comparaison.eps")
ggsave("comparaison.eps")
ggsave("comparaison.eps")
ggsave("comparaison.eps")
ggplot(m, aes(x=date, y = Nombre, color = toto)) + geom_line(lwd = 1) + facet_grid(Sol ~ Bloc) + theme_bw() + scale_color_viridis_d()+geom_rug(aes(x=date), color = rugs2, sides="b")+theme(legend.title = element_blank())
ggsave("comparaison_mm.eps")
lm(d$larves~d$inflos_vivantes)
plot(lm(d$larves~d$inflos_vivantes))
plot(lm(b1.b$larves~b1.b$inflos_vivantes))
data <- read_csv2("/home/bastien/Stage/Moi/Data/2017_flo_B1_.csv")
data2 <- data %>% gather(`stadeC_theo`, `stadeE_theo`, `stadeF_theo`, key = "Stade", value = "Nombre")
ggplot(data2, aes(x=days ,y= Nombre, color = Stade))+geom_line(lwd=1)
data2
data2 <- data %>% gather(`alive`, `alive_theo`, key = "Stade", value = "Nombre")
ggplot(data2, aes(x=days ,y= Nombre, color = Stade))+geom_line(lwd=1)
ggplot(data2, aes(x=days ,y= Nombre, color = Stade))+geom_line(lwd=1) + theme_bw() + scale_color_viridis_d()
ggplot(data2, aes(x=days ,y= Nombre, color = Stade))+geom_line(lwd=1) + theme_bw()
ggplot(data2, aes(x=days ,y= Nombre, color = Stade))+geom_line(lwd=1) + theme_bw() + xlab("Date") + ylab("Nombre d'inflorescences vivantes observées et théoriques")
ggplot(data2, aes(x=days ,y= Nombre, color = Stade))+geom_line(lwd=1) + theme_bw() + xlab("Date") + ylab("Nombre d'inflorescences vivantes observées et théoriques") + theme(legend.title = element_blank())
data <- read_csv2("/home/bastien/Stage/Moi/Data/2017_flo_B1_.csv") %>% mutate(Observées = alive, Théoriques = alive_theo)
data2 <- data %>% gather(`Observées`, `Théoriques`, key = "Stade", value = "Nombre")
ggplot(data2, aes(x=days ,y= Nombre, color = Stade))+geom_line(lwd=1) + theme_bw() + xlab("Date") + ylab("Nombre d'inflorescences vivantes observées et théoriques") + theme(legend.title = element_blank())
ggsave("comp_obs_theo.eps")
data <- read_csv2("/home/bastien/Stage/Moi/Data/2017_flo_B1_.csv") %>% mutate(Observées = moving.mean(alive), Théoriques = moving.mean(alive_theo))
data2 <- data %>% gather(`Observées`, `Théoriques`, key = "Stade", value = "Nombre")
ggplot(data2, aes(x=days ,y= Nombre, color = Stade))+geom_line(lwd=1) + theme_bw() + xlab("Date") + ylab("Nombre d'inflorescences vivantes observées et théoriques") + theme(legend.title = element_blank())
ggsave("comp_obs_theo.eps")
source('~/Stage/Moi/data_piege.R')
source('~/Stage/Moi/graphique_piege.R')
ggplot(m, aes(x=date, y = Nombre, color = toto)) + geom_line(lwd = 1) + facet_grid(Sol ~ Bloc) + theme_bw() + scale_color_viridis_d()+geom_rug(aes(x=date), color = rugs2, sides="b")+theme(legend.title = element_blank())
ggplot(d, aes(color = Sol)) + geom_line(aes(x=date, y=inflos_vivantes), lwd = 1) + geom_point(aes(x = date, y=larves)) + geom_segment(aes(x=date, xend=date, y=0, yend=larves)) + facet_grid(Sol ~ Bloc) + theme_bw() + scale_color_viridis_d()+geom_rug(aes(x=date), color = rugs)+theme(legend.position='none') + ylab("Nombre d'inflorescences et de larves à l'échelle du sous-bloc") + xlab("Date")
ggplot(d, aes(color = Sol)) + geom_line(aes(x=date, y=inflos_vivantes), lwd = 1) + geom_point(aes(x = date, y=larves)) + geom_segment(aes(x=date, xend=date, y=0, yend=larves)) + facet_grid(Sol ~ Bloc) + theme_bw() + scale_color_viridis_d()+geom_rug(aes(x=date), color = rugs)+theme(legend.position='none') + ylab("Nombre d'inflorescences et de larves à l'échelle du sous-bloc") + xlab("Date") + geom_abline(aes(v=12))
?geom_abline
ggplot(d, aes(color = Sol)) + geom_line(aes(x=date, y=inflos_vivantes), lwd = 1) + geom_point(aes(x = date, y=larves)) + geom_segment(aes(x=date, xend=date, y=0, yend=larves)) + facet_grid(Sol ~ Bloc) + theme_bw() + scale_color_viridis_d()+geom_rug(aes(x=date), color = rugs)+theme(legend.position='none') + ylab("Nombre d'inflorescences et de larves à l'échelle du sous-bloc") + xlab("Date") + geom_vline(aes(xintercept = 12))
ggplot(d, aes(color = Sol)) + geom_line(aes(x=date, y=inflos_vivantes), lwd = 1) + geom_point(aes(x = date, y=larves)) + geom_segment(aes(x=date, xend=date, y=0, yend=larves)) + facet_grid(Sol ~ Bloc) + theme_bw() + scale_color_viridis_d()+geom_rug(aes(x=date), color = rugs)+theme(legend.position='none') + ylab("Nombre d'inflorescences et de larves à l'échelle du sous-bloc") + xlab("Date") + geom_vline(aes(xintercept = 12), color = "black")
ggplot(d, aes(color = Sol)) + geom_line(aes(x=date, y=inflos_vivantes), lwd = 1) + geom_point(aes(x = date, y=larves)) + geom_segment(aes(x=date, xend=date, y=0, yend=larves)) + geom_vline(aes(xintercept = 12), color = "black") + facet_grid(Sol ~ Bloc) + theme_bw() + scale_color_viridis_d()+geom_rug(aes(x=date), color = rugs)+theme(legend.position='none') + ylab("Nombre d'inflorescences et de larves à l'échelle du sous-bloc") + xlab("Date")
ggplot(d, aes(color = Sol)) + geom_line(aes(x=date, y=inflos_vivantes), lwd = 1) + geom_point(aes(x = date, y=larves)) + geom_segment(aes(x=date, xend=date, y=0, yend=larves)) + geom_abline(aes(xintercept = 12), color = "black") + facet_grid(Sol ~ Bloc) + theme_bw() + scale_color_viridis_d()+geom_rug(aes(x=date), color = rugs)+theme(legend.position='none') + ylab("Nombre d'inflorescences et de larves à l'échelle du sous-bloc") + xlab("Date")
ggplot(d, aes(color = Sol)) + geom_line(aes(x=date, y=inflos_vivantes), lwd = 1) + geom_point(aes(x = date, y=larves)) + geom_segment(aes(x=date, xend=date, y=0, yend=larves)) + geom_line(aes(xintercept = 12), color = "black") + facet_grid(Sol ~ Bloc) + theme_bw() + scale_color_viridis_d()+geom_rug(aes(x=date), color = rugs)+theme(legend.position='none') + ylab("Nombre d'inflorescences et de larves à l'échelle du sous-bloc") + xlab("Date")
ggplot(d, aes(color = Sol)) + geom_line(aes(x=date, y=inflos_vivantes), lwd = 1) + geom_point(aes(x = date, y=larves)) + geom_segment(aes(x=date, xend=date, y=0, yend=larves)) + geom_vline(aes(xintercept = 12), color = "black") + facet_grid(Sol ~ Bloc) + theme_bw() + scale_color_viridis_d()+geom_rug(aes(x=date), color = rugs)+theme(legend.position='none') + ylab("Nombre d'inflorescences et de larves à l'échelle du sous-bloc") + xlab("Date")
?geom_vline
ggplot(d, aes(color = Sol)) + geom_line(aes(x=date, y=inflos_vivantes), lwd = 1) + geom_point(aes(x = date, y=larves)) + geom_segment(aes(x=date, xend=date, y=0, yend=larves)) + geom_vline(xintercept = 12, color = "black") + facet_grid(Sol ~ Bloc) + theme_bw() + scale_color_viridis_d()+geom_rug(aes(x=date), color = rugs)+theme(legend.position='none') + ylab("Nombre d'inflorescences et de larves à l'échelle du sous-bloc") + xlab("Date")
ggplot(d, aes(color = Sol)) + geom_line(aes(x=date, y=inflos_vivantes), lwd = 1) + geom_point(aes(x = date, y=larves)) + geom_segment(aes(x=date, xend=date, y=0, yend=larves)) + geom_vline(xintercept = 12, color = "black") + facet_grid(Sol ~ Bloc) + theme_bw() + scale_color_viridis_d()+geom_rug(aes(x=date), color = rugs)+theme(legend.position='none') + ylab("Nombre d'inflorescences et de larves à l'échelle du sous-bloc") + xlab("Date") + geom_vline(12)
ggplot(d, aes(color = Sol)) + geom_line(aes(x=date, y=inflos_vivantes), lwd = 1) + geom_point(aes(x = date, y=larves)) + geom_segment(aes(x=date, xend=date, y=0, yend=larves)) + geom_vline(xintercept = 12, color = "black") + facet_grid(Sol ~ Bloc) + theme_bw() + scale_color_viridis_d()+geom_rug(aes(x=date), color = rugs)+theme(legend.position='none') + ylab("Nombre d'inflorescences et de larves à l'échelle du sous-bloc") + xlab("Date") + geom_vline(xintercept = 12)
rug
rigs()
rugs
source('~/Stage/Moi/data_piege.R')
values_b1
ccf(values_b1$larves, values_b1$inflos_vivantes)
?ccf
acf(values_b1$larves)
pacf(values_b1$larves)
ccf(values_b1$larves, values_b1$inflos_vivantes)
summary(ccf(values_b1$larves, values_b1$inflos_vivantes))
ccf(values_b1$larves, values_b1$inflos_vivantes, type="covariance")
summary(ccf(values_b1$larves, values_b1$inflos_vivantes))
a=ccf(values_b1$larves, values_b1$inflos_vivantes, type="covariance")
a$type
a=ccf(values_b1$larves, values_b1$inflos_vivantes)
a$type
a$lag
a$n.used
a$series
a$snames
a$acf
med(1:33)
median(1:33)
a$acf[17]
cor(values_b1$larves, values_b1$inflos_vivantes)
cor(values_b1$larves[-80], lag(values_b1$inflos_vivantes)[-1])
a$acf[18]
a$acf[16]
ccf
?ts.intersect
ts.intersect(values_b1$larves, values_b1$inflos_vivantes)
cor(values_b1$larves, c(1,lag(values_b1$inflos_vivantes)[-1]))
a$acf[16]
hline(0.6726174)
abline(h=0.6726174)
cor(values_b1$larves[-80], lag(values_b1$inflos_vivantes)[-1])
cor(lag(values_b1$larves)[-1], values_b1$inflos_vivantes[-80])
cor(0.1,0.2)
?lag
lag(values_b1$larves)
lag(values_b1$larves, k =-1)
lag(values_b1$larves, k=-1)
ccf
rev(lag(rev(values_b1$larves)))
ccf(rev(lag(rev(values_b1$larves)))[-80], values_b1$inflos_vivantes[-80])
cor(rev(lag(rev(values_b1$larves)))[-80], values_b1$inflos_vivantes[-80])
ccf(values_b1$inflos_vivantes, values_b1$larves)
ccf(values_b1$inflos_vivantes, values_b1$larves)$acf[18]
ccf(values_b1$inflos_vivantes, values_b1$larves)$acf[17]
b=values_b1$larves
c=values_b1$inflos_vivantes
cor(c[-80], lag(b)[-1])
cor(c, lag(b))
cor(c, lag(b), na.rm=T)
cor(c[-1], lag(b)[-1])
a$acf[18]
a$acf[17]
a$acf[16]
a$acf[16]
cor(b[-1], lag(c)[-1])
cor(b[-80], lag(c)[-1])
ccf
?runif
?kruskal.test()
coco1 <- read.delim2("~/Documents/Coco/coco1.txt")
View(coco1)
coco1 <- read.delim2("~/Documents/Coco/coco1.txt")
coco1
kruskal.test(coco1$CqtExpression, coco1$Traitement)
coco1 <- read.delim2("~/Documents/Coco/coco2.txt")
coco1 <- read.delim2("~/Documents/Coco/coco1.txt")
coco2 <- read.delim2("~/Documents/Coco/coco2.txt")
coco2
kruskal.test(coco2$CqtExpression, coco2$Traitement)
coco3 <- read.delim2("~/Documents/Coco/coco3.txt")
kruskal.test(coco3$CqtExpression, coco3$Traitement)
coco3 <- read.delim2("~/Documents/Coco/coco3.txt")
kruskal.test(coco3$CqtExpression, coco3$Traitement)
coco4 <- read.delim2("~/Documents/Coco/coco4.txt")
kruskal.test(coco4$CqtExpression, coco4$Traitement)
coco5 <- read.delim2("~/Documents/Coco/coco5.txt")
kruskal.test(coco5$CqtExpression, coco5$Traitement)
coco6 <- read.delim2("~/Documents/Coco/coco6.txt")
kruskal.test(coco6$CqtExpression, coco6$Traitement)
coco7 <- read.delim2("~/Documents/Coco/coco7.txt")
kruskal.test(coco7$CqtExpression, coco7$Traitement)
coco8 <- read.delim2("~/Documents/Coco/coco8.txt")
kruskal.test(coco8$CqtExpression, coco8$Traitement)
?pairwise.wilcox.test
## Significatif, au moins l'un des groupes a une moyenne différentes des autres
pairwise.wilcox.test(coco1$CqtExpression, coco1$Traitement)
## Significatif, au moins l'un des groupes a une moyenne différentes des autres
pairwise.wilcox.test(coco1$CqtExpression, coco1$Traitement, paired = TRUE)
## Significatif, au moins l'un des groupes a une moyenne différentes des autres
pairwise.wilcox.test(coco1$CqtExpression, coco1$Traitement, paired = FALSE)
kruskal.test(coco1$CqtExpression, coco1$Traitement)
## Significatif, au moins l'un des groupes a une moyenne différentes des autres
pairwise.wilcox.test(coco2$CqtExpression, coco2$Traitement, paired = FALSE)
## Significatif, au moins l'un des groupes a une moyenne différentes des autres
pairwise.wilcox.test(coco2$CqtExpression, coco2$Traitement, paired = FALSE)
coco2
## Significatif, au moins l'un des groupes a une moyenne différentes des autres
pairwise.wilcox.test(coco1$CqtExpression, coco1$Traitement, paired = FALSE)
coco1
## Significatif, au moins l'un des groupes a une moyenne différentes des autres
pairwise.wilcox.test(coco3$CqtExpression, coco3$Traitement, paired = FALSE)
## Significatif, au moins l'un des groupes a une moyenne différentes des autres
pairwise.wilcox.test(coco4$CqtExpression, coco4$Traitement, paired = FALSE)
## Significatif, au moins l'un des groupes a une moyenne différentes des autres
pairwise.wilcox.test(coco5$CqtExpression, coco5$Traitement, paired = FALSE)
## Significatif, au moins l'un des groupes a une moyenne différentes des autres
pairwise.wilcox.test(coco6$CqtExpression, coco6$Traitement, paired = FALSE)
## Significatif, au moins l'un des groupes a une moyenne différentes des autres
pairwise.wilcox.test(coco7$CqtExpression, coco7$Traitement, paired = FALSE)
## Significatif, au moins l'un des groupes a une moyenne différentes des autres
pairwise.wilcox.test(coco8$CqtExpression, coco8$Traitement, paired = FALSE)
coco8
coco2
coco2 <- read.delim2("~/Documents/Coco/coco2.txt")
kruskal.test(coco2$CqtExpression, coco2$Traitement)
## Significatif, au moins l'un des groupes a une moyenne différentes des autres
pairwise.wilcox.test(coco2$CqtExpression, coco2$Traitement, paired = FALSE)
coco8 <- read.delim2("~/Documents/Coco/coco8.txt")
kruskal.test(coco8$CqtExpression, coco8$Traitement)
## Significatif, au moins l'un des groupes a une moyenne différentes des autres
pairwise.wilcox.test(coco8$CqtExpression, coco8$Traitement, paired = FALSE)
?p.adjust
## Significatif, au moins l'un des groupes a une moyenne différentes des autres
pairwise.wilcox.test(coco1$CqtExpression, coco1$Traitement, paired = FALSE, p.adjust.method = "BH")
## Significatif, au moins l'un des groupes a une moyenne différentes des autres
pairwise.wilcox.test(coco1$CqtExpression, coco1$Traitement, paired = FALSE, p.adjust.method = "BH")
## Significatif, au moins l'un des groupes a une moyenne différentes des autres
pairwise.wilcox.test(coco2$CqtExpression, coco2$Traitement, paired = FALSE, p.adjust.method = "BH")
## Significatif, au moins l'un des groupes a une moyenne différentes des autres
pairwise.wilcox.test(coco3$CqtExpression, coco3$Traitement, paired = FALSE, p.adjust.method = "BH")
## Significatif, au moins l'un des groupes a une moyenne différentes des autres
pairwise.wilcox.test(coco4$CqtExpression, coco4$Traitement, paired = FALSE, p.adjust.method = "BH")
## Significatif, au moins l'un des groupes a une moyenne différentes des autres
pairwise.wilcox.test(coco5$CqtExpression, coco5$Traitement, paired = FALSE, p.adjust.method = "BH")
## Significatif, au moins l'un des groupes a une moyenne différentes des autres
pairwise.wilcox.test(coco6$CqtExpression, coco6$Traitement, paired = FALSE, p.adjust.method = "BH")
## Significatif, au moins l'un des groupes a une moyenne différentes des autres
pairwise.wilcox.test(coco7$CqtExpression, coco7$Traitement, paired = FALSE, p.adjust.method = "BH")
## Significatif, au moins l'un des groupes a une moyenne différentes des autres
pairwise.wilcox.test(coco8$CqtExpression, coco8$Traitement, paired = FALSE, p.adjust.method = "BH")
## Significatif, au moins l'un des groupes a une moyenne différentes des autres
pairwise.wilcox.test(coco7$CqtExpression, coco7$Traitement, paired = FALSE, p.adjust.method = "BH")
## Significatif, au moins l'un des groupes a une moyenne différentes des autres
pairwise.wilcox.test(coco8$CqtExpression, coco8$Traitement, paired = FALSE, p.adjust.method = "BH")
## Significatif, au moins l'un des groupes a une moyenne différentes des autres
pairwise.wilcox.test(coco6$CqtExpression, coco6$Traitement, paired = FALSE, p.adjust.method = "BH")
## Significatif, au moins l'un des groupes a une moyenne différentes des autres
pairwise.wilcox.test(coco5$CqtExpression, coco5$Traitement, paired = FALSE, p.adjust.method = "BH")
## Significatif, au moins l'un des groupes a une moyenne différentes des autres
pairwise.wilcox.test(coco4$CqtExpression, coco4$Traitement, paired = FALSE, p.adjust.method = "BH")
## Significatif, au moins l'un des groupes a une moyenne différentes des autres
pairwise.wilcox.test(coco3$CqtExpression, coco3$Traitement, paired = FALSE, p.adjust.method = "BH")
d
## Significatif, au moins l'un des groupes a une moyenne différentes des autres
pairwise.wilcox.test(coco3$CqtExpression, coco3$Traitement, paired = FALSE, p.adjust.method = "BH")
## Significatif, au moins l'un des groupes a une moyenne différentes des autres
pairwise.wilcox.test(coco2$CqtExpression, coco2$Traitement, paired = FALSE, p.adjust.method = "BH")
## Significatif, au moins l'un des groupes a une moyenne différentes des autres
pairwise.wilcox.test(coco1$CqtExpression, coco1$Traitement, paired = FALSE, p.adjust.method = "BH")
## Significatif, au moins l'un des groupes a une moyenne différentes des autres
pairwise.wilcox.test(coco1$CqtExpression, coco1$Traitement, paired = FALSE, p.adjust.method = "BH")
## Significatif, au moins l'un des groupes a une moyenne différentes des autres
pairwise.wilcox.test(coco2$CqtExpression, coco2$Traitement, paired = FALSE, p.adjust.method = "BH")
## Significatif, au moins l'un des groupes a une moyenne différentes des autres
pairwise.wilcox.test(coco3$CqtExpression, coco3$Traitement, paired = FALSE, p.adjust.method = "BH")
## Significatif, au moins l'un des groupes a une moyenne différentes des autres
pairwise.wilcox.test(coco4$CqtExpression, coco4$Traitement, paired = FALSE, p.adjust.method = "BH")
## Significatif, au moins l'un des groupes a une moyenne différentes des autres
pairwise.wilcox.test(coco5$CqtExpression, coco5$Traitement, paired = FALSE, p.adjust.method = "BH")
## Significatif, au moins l'un des groupes a une moyenne différentes des autres
pairwise.wilcox.test(coco6$CqtExpression, coco6$Traitement, paired = FALSE, p.adjust.method = "BH")
## Significatif, au moins l'un des groupes a une moyenne différentes des autres
pairwise.wilcox.test(coco7$CqtExpression, coco7$Traitement, paired = FALSE, p.adjust.method = "BH")
## Significatif, au moins l'un des groupes a une moyenne différentes des autres
pairwise.wilcox.test(coco8$CqtExpression, coco8$Traitement, paired = FALSE, p.adjust.method = "BH")
load("cecidomyie/data/date_floraison2017.Rdata")
date_floraison2017
rm(list =ls())
Testing.sur.la.Naloxone...Resultats.du.testing <- read.csv("~/Téléchargements/Testing sur la Naloxone - Resultats du testing.csv", header=FALSE)
View(Testing.sur.la.Naloxone...Resultats.du.testing)
toto <- read.csv("~/Téléchargements/Testing sur la Naloxone - Resultats du testing.csv", header=FALSE)
toto
toto[,1:2]
toto[1:2, ]
tutu <- toto[3:nrow(toto), ]
colnames(tutu) <- toto[2, ]
tutu
toto[2, ]
?read.csv
toto <- read.csv("~/Téléchargements/Testing sur la Naloxone - Resultats du testing.csv", header=TRUE)
View(toto)
toto$Connaissance.prod.
toto$Connaissance.prod. %>% sum()
library(tidyverse)
toto$Connaissance.prod. %>% sum()
toto$Commande
toto$Commande %>% levels()
toto %>% filter(Commande == "Oui, je dois contacter le laboratoire deirectement.")
toto %>% filter(Commande == "Oui, je dois contacter le laboratoire directement.")
toto %>% filter(Commande == "Oui, je dois contacter le laboratoire directement. ")
toto %>% filter(Commande == "Oui, je peux contacter le laboratoire directement. ")
toto %>% filter(Commande == "Oui, je peux contacter le laboratoire directement. ") %>% pull(Type)
toto %>% filter(Commande == "Oui, je peux contacter le laboratoire directement. ") %>% pull(Type) %>% mean()
toto %>% filter(Commande == "Oui, je dois contacter le laboratoire directement. ") %>% pull(Type) %>% mean()
toto %>% filter(Commande == "Oui, je dois contacter le laboratoire directement. " | "Oui, je peux contacter le laboratoire directement. ") %>% pull(Type) %>% mean()
toto %>% filter(Commande == "Oui, je dois contacter le laboratoire directement. " || "Oui, je peux contacter le laboratoire directement. ") %>% pull(Type) %>% mean()
1.33*12+1.22*12
30.6/21
toto %>% filter(Commande == "Non, pas sur le logiciel du grossiste. ") %>% pull(Type) %>% mean()
?wilcox.test
78/80
toto$Type %>% mean()
toto$Type %>% median()
toto$Type %>% quantile(0.75)
toto$Type %>% quantile(0.9)
toto$Type %>% quantile(0.99)
toto$Type %>% quantile(0.1)
toto$Type %>% quantile(0.5)
toto$Type %>% quantile(1)
toto$Connaissance.prod. %>% quantile(1)
toto$Connaissance.prod. %>% quantile(0.5)
toto$Connaissance.prod. %>% quantile(.75)
toto$Connaissance.prod. %>% quantile(.80)
toto$Connaissance.prod. %>% quantile(.95)
toto %>% filter(Connaissance.prod. >= 4) %>% pull(Type)
toto %>% pull(Type)
toto %>% pull(Type) %>% count(x = )
toto %>% pull(Type) %>% count()
toto %>% count(Type)
5/80
4/24
18/24
4/24
20/24
56+24
55/56
titi <- read.csv("~/Téléchargements/naloxone.csv", header=TRUE)
titi
titi$Commande
titi$Commande %>% levels()
titi %>% filter(Type == 1)
tata <- titi %>% filter(Type == 1)
tata
tata %>% count(Commande)
39+2+1+6+8
14/56
tyty <- titi %>% filter(Type == 2)
tyty %>% count(Commande)
6/24
8/24
titi
titi %>% filter(Commande == "Oui, je peux contacter le laboratoire directement. ")
titi %>% filter(Commande == "Oui, je peux contacter le laboratoire directement. " | "Oui, je dois contacter le laboratoire directement. ")
titi %>% filter(Commande == "Oui, je peux contacter le laboratoire directement. " | Commande == "Oui, je dois contacter le laboratoire directement. ")
titi %>% filter(Commande == "Oui, je peux contacter le laboratoire directement. " | Commande == "Oui, je dois contacter le laboratoire directement. ") %>% pull(Connaissance.prod.) %>% median()
titi %>% filter(Commande == "Oui, je peux contacter le laboratoire directement. " | Commande == "Oui, je dois contacter le laboratoire directement. ") %>% filter(Connaissance.prod. == 1)
titi %>% filter(Commande == "Oui, je peux contacter le laboratoire directement. " | Commande == "Oui, je dois contacter le laboratoire directement. ") #%>% filter(Connaissance.prod. == 1)
titi %>% filter(Commande == "Oui, je peux contacter le laboratoire directement. " | Commande == "Oui, je dois contacter le laboratoire directement. ") %>% filter(Connaissance.prod. == 1)
titi %>% filter(Commande == "Oui, je peux contacter le laboratoire directement. " | Commande == "Oui, je dois contacter le laboratoire directement. ") %>% filter(Connaissance.prod. == 0)
titi %>% filter(Commande == "Oui, je peux contacter le laboratoire directement. " | Commande == "Oui, je dois contacter le laboratoire directement. ") %>% filter(Connaissance.prod. == 1)
titi %>% filter(Commande == "Oui, je peux contacter le laboratoire directement. " | Commande == "Oui, je dois contacter le laboratoire directement. ") %>% filter(Connaissance.prod. == 2)
titi %>% filter(Commande == "Oui, je peux contacter le laboratoire directement. " | Commande == "Oui, je dois contacter le laboratoire directement. ") %>% filter(Connaissance.prod. == 3)
titi %>% filter(Commande == "Oui, je peux contacter le laboratoire directement. " | Commande == "Oui, je dois contacter le laboratoire directement. ") %>% filter(Connaissance.prod. == 4)
titi %>% count(Connaissance.prod.)
titi %>% filter(Commande == "Non, pas sur le logiciel du grossiste. ")
titi %>% filter(Commande == "Non, pas sur le logiciel du grossiste. ") %>% count(Connaissance.prod.)
41+11+3
55+3+2+20
titi %>% filter(Raisons)
titi %>% pull(Raisons)
titi %>% pull(Raisons) %>% levels
titi %>% count(Raisons)
titi %>% count(Connaissance.prod.)
11/54
5/16
1/5
2/4
11/16
41/54
2/54
rm(list = ls())
load("/home/bastien/cecidomyie/data/alpha.Rdata")
setwd("/home/bastien/cecidomyie/data/")
## Débourrements simulés
burstER <- c(350.0134343452573, 453.0494680425028, 111.41292783253148, 105.4176075524184,
106.14146989801527, 106.88419984201273, 107.92798314266074, 27.862121398660715,
26.76922996155252, 25.358363282095244, 25.54519926027305, 26.41473950792908,
27.007805792169464, 28.189144320188845, 122.8007618803285, 128.3152149460844,
101.53006793971205, 102.33544605578878, 104.74898408664677, 102.96824259332047,
121.16128750960435, 134.7787425587716, 137.86280269690303, 137.01578907675332,
139.7596137548663, 142.57200716958042, 145.70417381412688, 154.58366499420154,
37.24443126919395, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
46.82048999967827, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 89.78342873052377,
144.49181086038928, 135.12353798107915, 132.69392868814563, 131.2803785071253,
129.6511363926496, 127.96846943359883, 79.59601412352224, 76.77659518316676,
6.2627699110336845, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.67835733741944,
36.910199285431624, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
burstPS <- c(231.35134498309577, 263.1403688655092, 35.519398739122536, 31.215276884534056,
31.79127788960595, 31.583174941078404, 27.640386994722814, 14.635660924044249,
14.993744364076822, 6.1507722412770045, 5.63795948726839, 0.7257925024988745,
0.0, 0.0, 75.4595353180211, 82.00232081716146, 17.8869887330277, 22.031034975909087,
22.79195886181951, 10.221408347499747, 57.75228834845634, 7.847338390478435, 0.0,
0.0, 0.0, 0.0, 0.0, 0.0, 17.390700893578728, 10.609708410549484, 0.0, 19.363579198503697,
39.87554903766926, 40.48034835461954, 21.077981753081588, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
0.0, 7.623219674981039, 120.08536501224773, 122.45307526157539, 116.3976867246767,
116.15027405087227, 116.60636777369129, 116.8083064709301, 116.82490644302892,
533.106536317362, 560.4567648461133, 140.00994342817992, 132.54929197450312,
133.98619823729632, 133.91811097302968, 73.78742001818966, 0.0, 0.0, 51.87075831583061,
54.81638852567342, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 106.45969010628332, 148.99610796959686,
0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
burstEH <- c(180.25526992154695, 226.4936275997441, 45.307288331510335, 41.830591828513484,
42.459873262367445, 41.513904182456194, 16.444664672369008, 48.81911577305092,
51.78093673625543, 23.632431806994763, 22.215401686226823, 21.092401323262774,
19.75710680770917, 18.939874846341613, 57.85483855055529, 61.264141439995974,
18.558375145392965, 15.228234310169707, 12.339015543243248, 10.107907329043584,
56.57018423922785, 69.7204379136405, 73.39554865212266, 60.48088882226898,
62.52913543682146, 65.04068749631428, 67.8495593231891, 72.64188499930185,
54.048468319005345, 0.0, 0.0, 0.0, 0.0, 13.74297566369447, 18.78743554547672,
8.201569977850445, 0.0, 0.0, 272.0025461613084, 291.05531639789984, 293.04305813638183,
295.13692413595504, 339.0804362944493, 342.20498733445817, 344.48633781059795,
189.67182503217072, 188.37403396318862, 190.65850372114684, 192.83008224721402,
195.24765293695233, 643.2649930205931, 671.037358038544, 356.2633431972951,
353.73502886675954, 358.28397128334166, 356.0093372915361, 11.437054191174589,
0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
library(tidyverse)
inflosCDE <- function(burst) {
inflos <- rep(NA, length(burst))
inflos[1] <- burst[1]
days <- 1:(length(burst)+3) ## Pour arriver au 80 jours avec les burst du dataset 1
for (t in days[-1]) {
temp <- 0
for (j in 1:min(16, t-1)) {
temp <- temp + burst[t-j] * (1 - CDF_norm[j])
}
inflos[t] <- burst[t] + temp
}
inflos
}
inflos_attractives <- function(burst, dA = 16) {
## Permet de simuler des inflos attractives
## dA permet de choisir la durée voulue
inflos <- matrix(NA, nrow = nrow(burst), ncol = 3)
inflos[1, ] <- burst[1, ]
days <- 1:nrow(burst)
for (t in days[-1]) {
tempER <- 0
tempPS <- 0
tempEH <- 0
for (j in 1:min(dA, t-1)) {
tempER <- tempER + burst[t-j, 1] * (1 - CDF_norm[j])
tempPS <- tempPS + burst[t-j, 2] * (1 - CDF_norm[j])
tempEH <- tempEH + burst[t-j, 3] * (1 - CDF_norm[j])
}
inflos[t, ] <- burst[t, ] + c(tempER, tempPS, tempEH)
}
inflos
}
inflosER <- inflos_attractives(burstER, 50)
inflos_simu <- inflos_attractives(cbind(burstER, burstPS, burstEH), 50)
mu <- 29
sigma <- 14
CDF_norm <- pnorm(1:50, mu, sigma)
inflos_simu <- inflos_attractives(cbind(burstER, burstPS, burstEH), 50)
toto <- read.csv("/home/bastien/cecidomyie/data/2017_piege.csv")
toto
inflos <- cbind(toto %>% filter(Sol == "ER") %>% pull(inflos), toto %>% filter(Sol == "PS") %>% pull(inflos), toto %>% filter(Sol == "EH") %>% pull(inflos))
inflos
load("/home/bastien/cecidomyie/data/date2017.Rdata")
c(inflos inflos_simu)
c(inflos, inflos_simu)
rep(1:3, each = 4, times = 2)
data.frame(date = rep(date2017, 6),
inflos = c(inflos, inflos_simu),
sol = factor(rep(c("Enherbement ras", "Paillage synthétique", "Enherbement haut"),
each = 80, times = 2),
levels = c("Enherbement ras", "Paillage synthétique", "Enherbement haut")),
statut = rep(c("Observées", "Simulées")))
data.frame(date = rep(date2017, 6),
inflos = c(inflos, inflos_simu),
sol = factor(rep(c("Enherbement ras", "Paillage synthétique", "Enherbement haut"),
each = 80, times = 2),
levels = c("Enherbement ras", "Paillage synthétique", "Enherbement haut")),
statut = rep(c("Observées", "Simulées"), each = 240))
data.frame(date = rep(date2017, 6),
inflos = c(inflos, inflos_simu),
sol = factor(rep(c("Enherbement ras", "Paillage synthétique", "Enherbement haut"),
each = 80, times = 2),
levels = c("Enherbement ras", "Paillage synthétique", "Enherbement haut")),
statut = rep(c("Observées", "Simulées"), each = 240)) %>%
ggplot() +
aes(x = date, y = inflos, color = statut) +
geom_line(lwd = 0.75) +
theme_bw() +
facet_grid(sol ~ .)
data.frame(date = rep(date2017, 6),
inflos = c(inflos, inflos_simu),
sol = factor(rep(c("Enherbement ras", "Paillage synthétique", "Enherbement haut"),
each = 80, times = 2),
levels = c("Enherbement ras", "Paillage synthétique", "Enherbement haut")),
statut = rep(c("Observées", "Simulées"), each = 240)) %>%
ggplot() +
aes(x = date, y = inflos, color = statut) +
geom_line(lwd = 0.75) +
theme_bw() +
facet_grid(.~sol)
data.frame(date = rep(date2017, 6),
inflos = c(inflos, inflos_simu),
sol = factor(rep(c("Enherbement ras", "Paillage synthétique", "Enherbement haut"),
each = 80, times = 2),
levels = c("Enherbement ras", "Paillage synthétique", "Enherbement haut")),
statut = rep(c("Observées", "Simulées"), each = 240)) %>%
ggplot() +
aes(x = date, y = inflos, color = statut) +
geom_line(lwd = 0.75) +
theme_bw() +
facet_grid(.~sol) +
ylab("Nombre d'inflorescences vivantes") +
xlab("")
data.frame(date = rep(date2017, 6),
inflos = c(inflos, inflos_simu),
sol = factor(rep(c("Enherbement ras", "Paillage synthétique", "Enherbement haut"),
each = 80, times = 2),
levels = c("Enherbement ras", "Paillage synthétique", "Enherbement haut")),
statut = rep(c("Observées", "Simulées"), each = 240)) %>%
ggplot() +
aes(x = date, y = inflos, color = statut) +
geom_line(lwd = 0.75) +
theme_bw() +
facet_grid(.~sol) +
ylab("Nombre d'inflorescences vivantes") +
xlab("") +
theme(legend.title = element_blank())
ggsave("simu_vs_obs.eps", width = 10, height = 4.5)
